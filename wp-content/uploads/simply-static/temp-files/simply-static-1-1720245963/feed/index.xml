<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Tuấn Khanh Blog</title>
	<atom:link href="https://nttkdeveloper.github.io/tuankhanhblog/feed/" rel="self" type="application/rss+xml" />
	<link>https://nttkdeveloper.github.io/tuankhanhblog</link>
	<description>Chia sẽ kiến thức, kinh nghiệm về ngành Công nghệ thông tin</description>
	<lastBuildDate>Sun, 30 Jun 2024 04:43:21 +0000</lastBuildDate>
	<language>vi</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.5.5</generator>

<image>
	<url>https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/4.png</url>
	<title>Tuấn Khanh Blog</title>
	<link>https://nttkdeveloper.github.io/tuankhanhblog</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Thuật toán PID là gì ? PID Controller có vai trò gì trong điều khiển tự động</title>
		<link>https://nttkdeveloper.github.io/tuankhanhblog/2024/06/30/thuat-toan-pid-la-gi-pid-controller-co-vai-tro-gi-trong-dieu-khien-tu-dong/</link>
					<comments>https://nttkdeveloper.github.io/tuankhanhblog/2024/06/30/thuat-toan-pid-la-gi-pid-controller-co-vai-tro-gi-trong-dieu-khien-tu-dong/#respond</comments>
		
		<dc:creator><![CDATA[tuankhanh]]></dc:creator>
		<pubDate>Sun, 30 Jun 2024 04:43:21 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">https://itblog.id.vn/?p=186</guid>

					<description><![CDATA[Bộ điều khiển PID là gì ? PID được sử dụng rộng rãi trong các ngành công nghiệp ngày nay. Mặc dù có các chức năng điều khiển PID có sẵn trong PLC, nhưng các chức năng này được sử dụng trong nhiều ứng dụng. Khoảng 95% quy trình khép kín trong lĩnh vực tự động [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p><strong>Bộ điều khiển PID</strong> là gì ? PID được sử dụng rộng rãi trong các ngành công nghiệp ngày nay. Mặc dù có các chức năng điều khiển PID có sẵn trong PLC, nhưng các chức năng này được sử dụng trong nhiều ứng dụng. Khoảng 95% quy trình khép kín trong lĩnh vực tự động hóa công nghiệp sử dụng loại bộ điều khiển này…</p>



<p><strong>PID</strong> sẽ dựa vào một phương trình toán học để điều khiển bằng cách thay đổi liên tục các biến số. Trong công nghiệp chúng thường áp dụng để điều khiển mức nước, điều khiển nhiệt độ hoặc áp suất. Chúng gần như không thể thiếu trong các dự án của nhà máy.</p>



<p>Để hiểu rõ hơn về thuật toàn này cũng như cách điều khiển chúng như thế nào. Bài viết này mình xin được chia đến mọi người tất tần tấn kiếm thức liên quan tới PID nhé.</p>



<h1 class="wp-block-heading"> Table of Content:</h1>



<div class="wp-block-aioseo-table-of-contents"><ul><li><a href="#aioseo-pid-la-gi">PID l&#xE0; g&#xEC; ?</a></li><li><a href="#aioseo-h-thng-ca-pid">H&#x1EC7; th&#x1ED1;ng c&#x1EE7;a PID :</a></li><li><a href="#aioseo-lch-s-hinh-thanh-ca-pid">L&#x1ECB;ch s&#x1EED; h&#xEC;nh th&#xE0;nh c&#x1EE7;a PID :</a></li><li><a href="#aioseo-thong-s-pid">Th&#xF4;ng s&#x1ED1; pid :</a></li><li><a href="#aioseo-xac-dinh-ch-s-kp-kd-ki">X&#xE1;c &#x111;inh ch&#x1EC9; s&#x1ED1; KP, KD, KI :</a><ul><li><a href="#aioseo-xac-dnh-bng-kinh-nhim">X&#xE1;c &#x111;&#x1ECB;nh b&#x1EB1;ng kinh nhi&#x1EC7;m:</a></li><li><a href="#aioseo-xac-dnh-bng-phng-phap-ziegler-nichols">X&#xE1;c &#x111;&#x1ECB;nh b&#x1EB1;ng ph&#x1B0;&#x1A1;ng ph&#xE1;p Ziegler &#x2013; Nichols :</a></li><li><a href="#aioseo-xac-dnh-bng-phn-mm">X&#xE1;c &#x111;&#x1ECB;nh b&#x1EB1;ng ph&#x1EA7;n m&#x1EC1;m :</a></li></ul></li><li><a href="#aioseo-u-nhc-dim-ca-pid">&#x1AF;u nh&#x1B0;&#x1EE3;c &#x111;i&#x1EC3;m c&#x1EE7;a PID :</a><ul><li><a href="#aioseo-u-dim">&#x1AF;u &#x111;i&#x1EC3;m :</a></li><li><a href="#aioseo-nhc-dim">Nh&#x1B0;&#x1EE3;c &#x111;i&#x1EC3;m :</a></li><li><a href="#aioseo-vi-sao-pid-dc-dung-nhiu">V&#xEC; sao PID &#x111;&#x1B0;&#x1EE3;c d&#xF9;ng nhi&#x1EC1;u :</a></li></ul></li><li><a href="#aioseo-ng-dng-ca-pid">&#x1EE8;ng d&#x1EE5;ng c&#x1EE7;a PID :</a><ul><li><a href="#aioseo-diu-khin-mc-nc-pid">&#x110;i&#x1EC1;u khi&#x1EC3;n m&#x1EF1;c n&#x1B0;&#x1EDB;c PID :</a></li><li><a href="#aioseo-diu-khin-nhit-d-pid">&#x110;i&#x1EC1;u khi&#x1EC3;n nhi&#x1EC7;t &#x111;&#x1ED9; PID :</a></li><li><a href="#aioseo-diu-khin-ap-sut-pid">&#x110;i&#x1EC1;u khi&#x1EC3;n &#xE1;p su&#x1EA5;t PID :</a></li></ul></li><li><a href="#aioseo-kt-lun">K&#x1EBF;t lu&#x1EAD;n :</a></li></ul></div>



<h1 class="wp-block-heading" id="aioseo-pid-la-gi">PID là gì ?</h1>



<p><a href="https://mesidas.com/pid/" target="_blank" rel="noopener" title="">PID</a><strong> (Proportional Integral Derivative)</strong> <strong><strong>(vi tích phân tỉ lệ</strong></strong>) là một cơ chế phản hồi vòng điều khiển được sử dụng rộng rãi trong các hệ thống điều khiển công nghiệp. PID còn được gọi với tên gọi khác là điều khiển tuyến tính.</p>



<p>Chúng là một phương trình toán học phức tạp. Phương trình toán này có sự liên kết chặt chẽ với nhau giữa đầu vào và đâu ra của hệ thống để đạt được một giá trị mong muốn (SP). Giá trị mong muốn có thể là giá trị nhiệt độ, áp suất, lưu lượng…</p>



<figure class="wp-block-image size-full"><img fetchpriority="high" decoding="async" width="1280" height="720" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/image.png" alt="Thuật toán PID là gì" class="wp-image-188"/></figure>



<p>Bộ điều khiển sẽ thực hiện giảm tối đa sai số bằng cách điều chỉnh giá trị điều khiển đầu vào. Để đạt được kết quả tốt nhất, các thông số PID sử dụng trong tính toán phải điều chỉnh theo tính chất của hệ thống trong khi kiểu điều khiển là giống nhau, các thông số phải phụ thuộc vào đặc thù của hệ thống</p>



<h1 class="wp-block-heading" id="aioseo-h-thng-ca-pid">Hệ thống của PID :</h1>



<p>Mọi hệ thống điều khiển PID hầu hết đều bao gồm các thành phần sau :</p>



<figure class="wp-block-image size-full"><img decoding="async" width="1280" height="720" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/image-1.png" alt="Các thiết bị trong một hệ thống PID" class="wp-image-189"/></figure>



<ul>
<li>Thiết bị điều khiển (bộ điều khiển PID, PLC…)</li>



<li>Cơ cấu điều khiển (van gia nhiệt hoặc động cơ, biến tần…)</li>



<li>Thiết bị phản hồi (cảm biến nhiệt độ, cảm biến áp suất, cảm biến lưu lượng…)</li>
</ul>



<p>Mọi thiết bị trong hệ thống này đều có sự liên kết chặt chẽ với nhau tạo nên một vòng điều khiển khép kín.</p>



<h1 class="wp-block-heading" id="aioseo-lch-s-hinh-thanh-ca-pid">Lịch sử hình thành của PID :</h1>



<p>Các bộ điều khiển được hình thành từ những năm 1890. Ý tưởng của bộ điều khiển PID được hình thành vào năm 1911 được phát triển bởi Elmer Sperry. Tuy nhiên đến nắm 1922 thì lý thuyết về điều khiển PID của kỹ sư người Mỹ gốc Nga Nicolas Minorsky mới được xuất bản. Tới thời điểm hiện tại nó vẫn còn được sử dụng trong các hệ thống điều khiển PID.</p>



<figure class="wp-block-image size-full"><img decoding="async" width="1280" height="720" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/image-2.png" alt="Hệ thống PID sơ khai
" class="wp-image-191"/></figure>



<p>Công trình của Nicolas Minorsky giải quyết được các vấn đề về điều khiển tự động PID. Nó giải quyết các vấn đề về độ ổn định, độ chính xác. Các thử nghiệm đã được tiến hành trên tàu USS New Mexico, với bộ điều khiển điều chỉnh vận tốc gốc của bánh lái. &nbsp;Điềi khiển PID cho ra kết quả độ nghiêng của bánh lái trong khoảng ±1/6°, tốt hơn hầu hết người lái tàu có thể làm được.</p>



<p>Đến năm 1942, các qui tắc điều chỉnh của Ziegler và Nichols được giới thiệu. Các qui tắc này xuất hiện giúp các kỹ sư có thể tìm và thiết lập các thông số PID chính xác.</p>



<p>Đến giữa năm 1950 các bộ điều khiển PID được sử dụng rộng rãi trong công nghiệp và vẫn tiếp tục được sử dụng cho đến ngày hôm nay.</p>



<h1 class="wp-block-heading" id="aioseo-thong-s-pid">Thông số pid :</h1>



<p>Điều khiển PID có 3 khâu: Khâu tỉ lệ, khâu tích phân và khâu vi phân.</p>



<p><strong>Khâu tỉ lệ (P – controller)</strong> làm thay đổi giá trị đầu ra tỉ lệ với giá trị sai số hiện tại. Khâu tỉ lệ với chức năng làm thay đổi giá trị đầu ra đến giá trị mong muốn. Tuy nhiên trong thực tế thì sẽ không bao giờ đặt được đến giá trị mong muốn. Nó luôn có sai lệch một chút so với giá trị mong muốn.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1280" height="720" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/image-3.png" alt="Thông số P,I,D có nghĩa là gì?" class="wp-image-192"/></figure>



<p><span style="font-size: 18.4px; font-family: Lato, sans-serif; white-space-collapse: collapse;"><strong>Khâu tích phân (I – controller) </strong>cộng dồn các sai số trong quá khứ. Khâu này tỉ lệ với biên độ sai số và thời gian xảy ra sai số. Với khâu tích phân nó cho thời gian đáp ứng của hệ thống nhanh hơn.</span></p>



<p><span style="box-sizing: border-box; font-size: 18.4px; color: rgb(0, 0, 0);"><strong>Khâu vi phân (D – controller) </strong>là vi phân của sai lệch. Nó đưa ra tín hiệu điều khiển tỉ lệ với tốc độ thay đổi sai số. Nói đơn giản là nếu tốc độ thay đổi của hệ thống quá nhanh thì khâu vi phân sẽ giảm tốc độ đó xuống. Nói chung khâu vi phân sẽ làm dao động của hệ thống tắt dần theo thời gian.Nếu bỏ tích phân và vi phân đi thì vẫn có thể điều khiển được. Tuy nhiên sẽ có sai số khi điều khiển tỉ lệ. Thêm vào khâu tích phân cho ra hệ thống giảm sai số. Thêm vào khâu vi phân sẽ tăng thời gian đáp ứng và giảm dao động.</span></p>



<h1 class="wp-block-heading" id="aioseo-xac-dinh-ch-s-kp-kd-ki">Xác đinh chỉ số KP, KD, KI :</h1>



<p>Đặc trưng của thuật toán PID là điều khiển các hệ số biến để đạt được kết quả mình mong muốn. Để alfm được điều đó thì ta phải xác đinh miền của chúng trước. Đó là đi xác định 3 chỉ số sau <strong>Kp</strong>, <strong>Kd</strong> và <strong>Ki.</strong> Các trị số này được xác định bằng các phương pháp như sau:</p>



<h2 class="wp-block-heading" id="aioseo-xac-dnh-bng-kinh-nhim">Xác định bằng kinh nhiệm:</h2>



<p>Xác định bằng kinh nghiệm phụ thuộc vào kinh nghiệm của người điều khiển. Mỗi người có một cách xác định khác nhau. Vì thế hệ thống ổn định, độ chính xác cao hay không phụ thuộc vào kinh nghiệm của người vận hành. Để xác định được thông số theo cách này chúng ta làm như sau:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1280" height="720" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/image-4.png" alt="Xác đinh chỉ số KP, KD, KI" class="wp-image-193"/></figure>



<p>Đầu tiên cho hệ số Ki=Kd=0. Chọn hệ số Kp đến khi nào hệ thống xuất hiện dao động. Lúc này ta sẽ chọn hệ số Kp bằng một nửa giá trị hoặc bằng một phần giá trị để hệ thống đáp ứng được.</p>



<p>Khi đã chọn được hệ số Kp, ta tiếp tục tăng Ki đến giá trị phù hợp. Nếu có dao động xuất hiện thì tăng giá trị Kd lên.</p>



<h2 class="wp-block-heading" id="aioseo-xac-dnh-bng-phng-phap-ziegler-nichols"><strong>Xác định bằng phương pháp Ziegler – Nichols</strong> :</h2>



<p><strong>Phương pháp Ziegler – Nichols</strong> là một phương pháp điều chỉnh bộ điều khiển PID được phát triển bởi John G. Ziegler và Nathaniel B. Nichols. Phương pháp này được thực hiện bằng cách thiết lập thông số độ lợi Ki (tích phân) và Kd (vi phân) về không 0. Kp được tăng lên từ không 0 cho đến khi nó đạt đến độ lợi Ku tối đa, mà đầu ra của vòng điều khiển dao động với biên độ không đổi Ku và chu kỳ dao động Tu được sử dụng để thiết lập độ lợi P, I, và D tùy thuộc vào loại điều khiển được sử dụng:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1280" height="720" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/image-5.png" alt="Xác định bằng phương pháp Ziegler – Nichols" class="wp-image-194"/></figure>



<h2 class="wp-block-heading" id="aioseo-xac-dnh-bng-phn-mm">Xác định bằng phần mềm :</h2>



<p>Hiện nay dùng phần mềm để xác định thông số PID được ưa chuộng nhất. Phần mềm sẽ mô phỏng vật lý các chuyển động. Cho ra các hệ số chính xác nhất, các gói phần mềm này dựa theo các tính toàn vật lý, các cơ sở dữ liệu mô phỏng để cho ra hệ số chính xác nhất.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1280" height="720" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/image-6.png" alt="Xác định bằng phần mềm matlab" class="wp-image-195"/></figure>



<p>Ngày nay sử dụng việc xác định các thông số điều khiển bằng phần mềm được cho là tối ưu và nhanh chóng nhất. Bởi vì các phương pháp tinh chỉnh ở trên có thể kéo dài đến vài ngày, có khi đến cả tháng để xác định độ ổn định của hệ thống. Giá trị tối ưu nhất cho hệ thống có thể mất cả vài tháng.</p>



<p>Để tránh mất thời gian về việc hiểu chỉnh, ngày nay các hãng thiết kế bộ điều khiển PID đều nhúng sẵn thuật toán tự điều chỉnh thông số. Ví dụ các bộ điều khiển PID đến từ hãng Pixsys đều có hệ thống xác định thông số PID tự động. Trong PLC của siemens cũng thuật toán xác định thông số PID.</p>



<h1 class="wp-block-heading" id="aioseo-u-nhc-dim-ca-pid">Ưu nhược điểm của PID : </h1>



<p>Tất cả các phương pháp điều khiển tự động được xây dụng trên các mô hình toán học. Các bộ điều khiển đều có ưu và nhược điểm riêng của nó. Tùy vào ưu điểm của từng phương pháp sẽ được ứng dụng vào một mô hình khác nhau. Với PID cũng thế nó những điểm mạnh và hạn chế của riêng nó.</p>



<h2 class="wp-block-heading" id="aioseo-u-dim">Ưu điểm :</h2>



<p>Với PID ưu điểm lớn nhất của nó chính là độ chính xác và độ tin cậy cao. Tới thời điểm hiện tại, chúng ta luôn không ngừng cải tiến các hệ thống sử dụng PID. Có nhưng thiết bị được thiết kế dành riêng để điều khiển PID như bộ điều khiển PID ATR244, ATR144, …</p>



<p>Bộ PID đơn giản dễ sử dụng. Nó không yêu cầu mô hình toán học vẫn có thể điều khiển. Thậm chí điều khiển vẫn rất tốt nếu có các thông số PID phù hợp. Thuật toán điều khiển PID được tích hợp rất nhiều trong các bộ điều khiển hiện nay như PLC, các bộ điều khiển đơn lẻ…</p>



<p>Độ ổn định của điều khiển này rất cao. Nó có thể chính xác ngay cả khi không có bất kì cải tiến nào. Có thể nối tầng nhiều bộ điều khiển PID…</p>



<h2 class="wp-block-heading" id="aioseo-nhc-dim">Nhược điểm :</h2>



<p>Nhược điểm của PID đó chính là nó chỉ có thể điều khiển tuyến tính. Vì thế trong mỗi mô hình điều khiển khác nhau sẽ có những thông số điều khiển khác nhau. Mặc dù kiểu điều khiển là như nhau. Với các mô hình điều khiển phi tuyến nó sẽ cho ra rất nhiều kết quả khác nhau, và độ chính xác của nó không cao.</p>



<p>P.I.D có khâu vi phân khá nhạy với tần số cao. Vì thế nó rất dễ nhiễu ở các môi trường có tần số lớn. Trong trường hợp này buộc phải thiết kế bộ lọc thông thấp để giảm bớt tín hiệu nhiễu cho hệ thống.</p>



<p>Bộ điều khiển không thể thích nghi với những sự thay đổi nhỏ. Khi thêm bất kì một biến số nào chúng ta buộc phải cài đặt lại các thông số của nó. Hoặc với chỉ một biến số nhỏ cũng làm cho điều khiển PID chạy sai lệch.</p>



<h2 class="wp-block-heading" id="aioseo-vi-sao-pid-dc-dung-nhiu">Vì sao PID được dùng nhiều : </h2>



<p>Ngày nay, với công nghệ ngày càng phát triển, các hệ thống điều khiển tự động cũng phát triển theo. Từ đó kéo theo nhiều lý thuyết đều khiển tự động khác nữa. Với mỗi phương pháp đều khiển tự động khác nhau cho ra một kết quả khác nhau độ chính xác khác nhau. Tuy nhiên các phương pháp khác lại có độ phức tạp cao hơn so với điều khiển PID.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1280" height="720" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/image-7.png" alt="PID dùng để điều khiển mực nước" class="wp-image-196"/></figure>



<p>Với các mô hình điều khiển tự động khác PID cũng cho ra kết quả. Tuy chính xác không cao nhưng vì PID rất dễ sử dụng cho nên nó được dùng rất nhiều. Không những thế PID cho phép điều khiển mà không cần hoàn thiện mô hình toán học. Với các phương pháp khác người ta cần phải xây dựng mô hình toán học để đảm bảo độ chính xác khi điều khiển. Vì lý do đó P.I.D được sử dụng rộng rãi.</p>



<p>Nó được dùng trong các hệ thống lò hơi để đảm bảo rằng mức nước trong lò hơi không quá ít. Điều khiển PID còn được dùng để điều khiển mức nước. Để nước trong bồn chứa luôn ở một giá trị cố định nào đo.</p>



<p>Điều khiển PID còn được dùng trong biến tần. Nó được dùng để điều khiển các động cơ có tốc độ và monent mong muốn. Ví dụ trong bồn khuấy tốc độ khuấy là 1000v/p thì với biến tần sử dụng PID để cho cánh khuấy luôn duy trì ở mức đó. Còn nhiều ứng dụng khác nữa.</p>



<h1 class="wp-block-heading" id="aioseo-ng-dng-ca-pid">Ứng dụng của PID : </h1>



<p>Mình sẽ nếu ứng dụng chung mà thường bắt gặp nhất trong các dự án công nghiệp hiện nay.</p>



<h2 class="wp-block-heading" id="aioseo-diu-khin-mc-nc-pid">Điều khiển mực nước PID :</h2>



<p>Các hệ thống xử lý nước hay những bình chứa đựng chất lỏng trong nhà máy hiện tại ít nhiều vẫn cần sự can thiệt của con người trong quá trình vận hành. Chính vì thế, nên nhiều khi sự sai sót sẽ diễn ra bởi một vài nguyên nhân chủ quan của con người. Thế nên, làm thế nào mà chúng ta có thể điều khiển được mức nước ở những khu vực bể chứa, bình chứa… mà không cần phải can thiệt trực tiếp vào.</p>



<figure class="wp-block-image size-full is-resized"><img loading="lazy" decoding="async" width="1280" height="720" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/image-8.png" alt="Điều khiển mực nước bằng thuật toán PID" class="wp-image-197" style="width:840px;height:auto"/></figure>



<p>Thì PID là câu trả lời cho bài toán trên. Đối với bài toán PID mực nước phổ biến nhất đó là đóng mở bơm ở hay mưc khác nhau.</p>



<p>Ví dụ như:</p>



<p>Bạn có bồn nước cao 2m. Điều kiện của bài toán là luôn giữ vòi xả của bơm nước sao cho mức nước trong bồn ở mưc 1m8.</p>



<p>Để làm được điều này thì cần phải chuẩn bị các thiết bị sau:</p>



<ul>
<li>1 cảm biến đo mức nước (tín hiệu analog)</li>



<li>1 Bộ điều khiển PID</li>



<li>1 biến tần dàng cho máy bơm</li>



<li>1 máy bơm nước</li>
</ul>



<p>Khi chuẩn bị xong các thiết bị thì chúng ta thực hiện nối dây chúng với nhau. Theo sơ đồ như ở trên thì cảm biến sẽ được gắn vào bồn và chuyển tín hiệu analog 4-20mA về bộ điều khiển.</p>



<p>Bộ điều khiển sẽ nhận tín hiệu từ cảm biến đo mức này và dúng thuật toán PID để so sánh với các điều kiện. Xong sau đó bộ điều khiển sẽ xuất ra tín hiệu analog và truyền vào biến tần. Từ đó biến tần sẽ điều chỉnh động cơ sao cho lưu lượng nước luôn giữ ở mức 1m8 trong bồn chứa.</p>



<h2 class="wp-block-heading" id="aioseo-diu-khin-nhit-d-pid">Điều khiển nhiệt độ PID :</h2>



<p>Cũng giống như điều khiển mực nước thì điều khiển nhiệt độ cũng có ứng dụng tương tự. Mình sẽ viết một bài chi tiết về các điều khiển nhiệt độ bàng PID và những yếu tố liên quan đến chúng. Ở đây mình chỉ nếu khai quát các thức chúng hoạt động thôi.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1280" height="720" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/image-9.png" alt="Điều khiển nhiệt độ bằng thuật toán PID" class="wp-image-198"/></figure>



<p>Thông thường để làm giảm nhiệt một loại máy móc, động cơ hay một hệ thống nào đó thì người ta thường sử dụng một hệ thống làm mát tự động. Máy nà sẽ đo nhiệt độ môitr ường bằng một cảm biến nhiệt độ và sau đó xử lý tín hiệu này bằng thuật toán PID.</p>



<p>Khi xử lý xong và thực hiện so sánh với các điều kiễn mẫu khắc bộ điều khiển này sẽ xuất tín hiệu analog lại về hệ thống bơm nước làm mát sao cho mước nước làm mát này luôn đảm bảo cho máy móc hoạt động ở một nhiệt độ nhất định.</p>



<h2 class="wp-block-heading" id="aioseo-diu-khin-ap-sut-pid">Điều khiển áp suất PID :</h2>



<p>Đây cũng là mộ trong những ứng dụng khá phổ biến trong công nghiệp. Thông thường chúng được ứng dụng trong ccas bình chứa khí có áp suất sao. Như các bạn biết thì khí nén là một dạng năng lương không thể nào thiếu trong các nhà máy sản xuất.</p>



<p>Để lưu trữ khí nén người ta thường dùng một bình áp suất làm nơi chưa. Chúng như một cái kho nnawg nượng cung cấp tho cả hệ thông của bạn. Để nạp khí cho hệ thống này hầu hết các kỹ sư sẽ lựa chọn phương pháp tự động để đảm bảo mức khsi trong bình luôn ở mức đầy và sẵn sàng cung cấp cho thiết bị.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1280" height="720" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/image-10.png" alt="Điều khiển áp suất bằng thuật toán PID" class="wp-image-199"/></figure>



<p>Ví dụ</p>



<p>Bình chưa của các bạn có áp suất khí nén khi đầy là 60Bar. Và khi dưới 25Bar thì bơm khí nén tự động hoạt động trở lại để cung cấp khí cho bình chứa.</p>



<p>Đối với bài toán này cũng giống như hai bài toán trên về nhiệt độ và mức nước. Bộ điều khiển có thuật toán PID đều có thể giải quyết được hết.</p>



<h1 class="wp-block-heading" id="aioseo-kt-lun">Kết luận :</h1>



<p>Trên đây là tất cả những nội dung <strong>PID là gì ?</strong> mà Trọng muốn chia sẻ đến các bạn. Mong rằng bài viết này sẽ giúp ích được các bạn trong qau trình làm việc và học tập. Và điều nữa là tât cả các thiết bị trên bên mình đều cung cấp. Bạn nào có như cầu sử dụng hoặc tìm hiểu thiết bị thì hãy hay liên hệ với mình. Mình sẽ cung cấp giải pháp miễn phí và các thiệt bị chính hãng từ Châu Âu cho mọi người. Cảm ơn các bạn đã theo dõi bài viết của Trọng. Chúc các bạn thành công!</p>
]]></content:encoded>
					
					<wfw:commentRss>https://nttkdeveloper.github.io/tuankhanhblog/2024/06/30/thuat-toan-pid-la-gi-pid-controller-co-vai-tro-gi-trong-dieu-khien-tu-dong/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Cấu Trúc Dữ Liệu: 8 Cấu Trúc Phổ Biến Nhất Và Ứng Dụng</title>
		<link>https://nttkdeveloper.github.io/tuankhanhblog/2024/06/04/cau-truc-du-lieu-8-cau-truc-pho-bien-nhat-va-ung-dung/</link>
					<comments>https://nttkdeveloper.github.io/tuankhanhblog/2024/06/04/cau-truc-du-lieu-8-cau-truc-pho-bien-nhat-va-ung-dung/#respond</comments>
		
		<dc:creator><![CDATA[tuankhanh]]></dc:creator>
		<pubDate>Tue, 04 Jun 2024 09:00:33 +0000</pubDate>
				<category><![CDATA[cấu trúc dữ liệu]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">https://itblog.id.vn/?p=148</guid>

					<description><![CDATA[&#160;Table of Content: Cấu trúc dữ liệu là gì? Cấu trúc dữ liệu&#160;(data structure) là cách tổ chức và lưu trữ dữ liệu trong bộ nhớ máy tính một cách có hệ thống để dễ dàng truy xuất và thực hiện các thao tác trên dữ liệu đó. Cấu trúc giúp định nghĩa mối quan [&#8230;]]]></description>
										<content:encoded><![CDATA[
<h1 class="wp-block-heading">&nbsp;Table of Content:</h1>



<div class="wp-block-aioseo-table-of-contents"><ul><li><a href="#aioseo-cu-truc-d-liu-la-gi">C&#x1EA5;u tr&#xFA;c d&#x1EEF; li&#x1EC7;u l&#xE0; g&#xEC;?</a></li><li><a href="#aioseo-phan-loi-cu-truc-d-liu-la-gi">Ph&#xE2;n lo&#x1EA1;i c&#x1EA5;u tr&#xFA;c d&#x1EEF; li&#x1EC7;u l&#xE0; g&#xEC;?</a><ul><li><a href="#aioseo-cu-truc-d-liu-linear">C&#x1EA5;u tr&#xFA;c d&#x1EEF; li&#x1EC7;u Linear:</a></li><li><a href="#aioseo-cu-truc-d-liu-phi-tuyn-tinh-nonlinear">C&#x1EA5;u tr&#xFA;c d&#x1EEF; li&#x1EC7;u phi tuy&#x1EBF;n t&#xED;nh (Nonlinear):</a></li></ul></li><li><a href="#aioseo-ly-do-cn-s-dng-cu-truc-d-liu-la-gi">L&#xFD; do c&#x1EA7;n s&#x1EED; d&#x1EE5;ng c&#x1EA5;u tr&#xFA;c d&#x1EEF; li&#x1EC7;u l&#xE0; g&#xEC;?</a></li><li><a href="#aioseo-cac-cu-truc-d-liu-ph-bin-la-gi">C&#xE1;c c&#x1EA5;u tr&#xFA;c d&#x1EEF; li&#x1EC7;u ph&#x1ED5; bi&#x1EBF;n l&#xE0; g&#xEC;?</a><ul><li><a href="#aioseo-mng-array">M&#x1EA3;ng (Array):</a></li><li><a href="#aioseo-danh-sach-lien-kt-linked-list">Danh s&#xE1;ch li&#xEA;n k&#x1EBF;t (Linked List):</a></li><li><a href="#aioseo-hang-di-queue">H&#xE0;ng &#x111;&#x1EE3;i (Queue):</a></li><li><a href="#aioseo-ngan-xp-stack">Ng&#x103;n x&#x1EBF;p (Stack):</a></li><li><a href="#aioseo-cay-tree">C&#xE2;y (Tree):</a></li><li><a href="#aioseo-bng-bam-hash-table">B&#x1EA3;ng B&#x103;m (Hash Table):</a></li><li><a href="#aioseo-dng-heap">&#x110;&#x1ED1;ng (Heap)</a></li></ul></li><li><a href="#aioseo-u-dim-va-nhc-dim-ca-cac-cu-truc-d-liu">&#x1AF;u &#x111;i&#x1EC3;m v&#xE0; nh&#x1B0;&#x1EE3;c &#x111;i&#x1EC3;m c&#x1EE7;a c&#xE1;c c&#x1EA5;u tr&#xFA;c d&#x1EEF; li&#x1EC7;u?</a></li><li><a href="#aioseo-c">C&#xE1;c thao t&#xE1;c ph&#x1ED5; bi&#x1EBF;n tr&#xEA;n c&#x1EA5;u tr&#xFA;c d&#x1EEF; li&#x1EC7;u:</a></li><li><a href="#aioseo-cac-lu-y-khi-s-dng-cu-truc-d-liu">C&#xE1;c l&#x1B0;u &#xFD; khi s&#x1EED; d&#x1EE5;ng c&#x1EA5;u tr&#xFA;c d&#x1EEF; li&#x1EC7;u:</a></li><li><a href="#aioseo-khac-bit-gia-kiu-d-liu-va-cu-truc-d-liu-la-gi">Kh&#xE1;c bi&#x1EC7;t gi&#x1EEF;a ki&#x1EC3;u d&#x1EEF; li&#x1EC7;u v&#xE0; c&#x1EA5;u tr&#xFA;c d&#x1EEF; li&#x1EC7;u l&#xE0; g&#xEC;?</a></li><li><a href="#aioseo-kt-lun">K&#x1EBF;t lu&#x1EAD;n:</a></li></ul></div>



<h1 class="wp-block-heading" id="aioseo-cu-truc-d-liu-la-gi">Cấu trúc dữ liệu là gì?</h1>



<p>Cấu trúc dữ liệu&nbsp;(data structure) là cách tổ chức và lưu trữ dữ liệu trong bộ nhớ máy tính một cách có hệ thống để dễ dàng truy xuất và thực hiện các thao tác trên dữ liệu đó. Cấu trúc giúp định nghĩa mối quan hệ giữa các phần tử dữ liệu và cung cấp các phương thức để thao tác trên chúng.</p>



<p>Các cấu trúc dữ liệu phổ biến bao gồm các loại như mảng, danh sách liên kết, cây, đồ thị…Mỗi loại data structure có những đặc điểm riêng. Vì vậy việc hiểu và chọn cấu trúc phù hợp là rất quan trọng để đảm bảo tính hiệu quả và hiệu suất của chương trình.</p>



<h1 class="wp-block-heading" id="aioseo-phan-loi-cu-truc-d-liu-la-gi">Phân loại cấu trúc dữ liệu là gì?</h1>



<p>Cấu trúc dữ liệu được chia làm 2 loại chính:</p>



<figure class="wp-block-image size-full is-resized"><a href="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/Bang-phan-loai-cac-loai-cau-truc-du-lieu.jpg"><img loading="lazy" decoding="async" width="793" height="449" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/Bang-phan-loai-cac-loai-cau-truc-du-lieu.jpg" alt="" class="wp-image-162" style="width:844px;height:auto"/></a></figure>



<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0)" class="has-inline-color has-black-color"><strong>Cấu trúc dữ liệu được chia làm 2 loại là tuyến tính và phi tuyến tính</strong></mark></p>



<h2 class="wp-block-heading" id="aioseo-cu-truc-d-liu-linear">Cấu trúc dữ liệu Linear:</h2>



<p>Cấu trúc dữ liệu tuyến tính là cấu trúc trong đó các phân tử dữ liệu được sắp xếp theo thứ tự tuần tự hoặc tuyến tính và mỗi phần tử được liên kết với các phân tử được liên kết với các phân tử kế tiếp và trước đó của nó. Ví dụ về cấu trúc tuyến tính: Mảng, ngăn xếp (stack), hàng đợi (queue), danh sách liên kết (linked list), &#8230;. Trong cấu trúc dữ liệu Linner, còn được chia ra làm các loại gồm:</p>



<ul>
<li><strong>Cấu trúc dữ liệu (Static):</strong> Cấu trúc dữ liệu tĩnh có kích thước bộ nhớ cố định, nghĩa là số lượng phần tử của nó được xác định trước và không thể thay đổi trong quá trình chạy chương trình. Do đó, truy cập các phần tử trong một cấu trúc tĩnh dễ dàng hơn.</li>



<li><strong>Cấu trúc dữ liệu động (Dynamic):</strong> Trong cấu trúc dữ liệu động, kích thước không cố định. Nó có thể được cập nhật ngẫu nhiên trong thời gian chạy và có thể được coi là giúp tối ưu bộ nhớ của mã.</li>
</ul>



<p>Cấu trúc dữ liệu tuyến tính thường được sử dụng trong các tình huống mà các phần tử cần được xếp theo thứ tự nhất định và có thể được truy cập bằng chỉ số hoặc con trỏ. Ví dụ như lưu trữ một danh sách sinh viên và có thể truy cập bằng số thứ tự. Cấu trúc dữ liệu Linear cũng được sử dụng khi cần sắp xếp, tìm kiếm, thêm hoặc xóa phần tử một cách hiệu quả.</p>



<h2 class="wp-block-heading" id="aioseo-cu-truc-d-liu-phi-tuyn-tinh-nonlinear">Cấu trúc dữ liệu phi tuyến tính (Nonlinear):</h2>



<p>Cấu trúc dữ liệu phi tuyến tính không có cấu trúc phân cấp rõ ràng, nghĩa là các phần tử có thể có nhiều phần tử con và/hoặc cha. Ví dụ về cấu trúc dữ liệu phi tuyến tính bao gồm cây, đồ thị,….Cấu trúc dữ liệu phi tuyến tính thường được sử dụng khi các đối tượng trong chương trình có mối quan hệ phức tạp với nhau hoặc khi chúng có cấu trúc không đều. Ví dụ, cây được sử dụng để lưu trữ dữ liệu có thứ tự như các cây phân nhánh. Ngoài ra, cấu trúc dữ liệu nonlinear cũng được sử dụng trong các thuật toán tìm kiếm, định tuyến và tối ưu hóa mạng.</p>



<h1 class="wp-block-heading" id="aioseo-ly-do-cn-s-dng-cu-truc-d-liu-la-gi">Lý do cần sử dụng cấu trúc dữ liệu là gì?</h1>



<p>Việc trình bày dữ liệu một cách dễ hiểu là rất quan trọng để lập trình viên có thể thực hiện thao tác một cách hiệu quả. Cấu trúc dữ liệu giúp tổ chức, truy xuất, quản lý và lưu trữ dữ dễ dàng hơn. Một số lý</p>



<ul>
<li><strong>Cải thiện hiệu suất: </strong>Bằng cách tối ưu hóa thời gian và bộ nhớ. Khi sử dụng cấu trúc phù hợp, chúng ta có thể giảm thiểu thời gian và bộ nhớ cần thiết cho chương trình.</li>



<li><strong>Tăng tính linh hoạt: </strong>Sử dụng các cấu trúc dữ liệu phù hợp có thể giúp cho chương trình trở nên linh hoạt trong việc lưu trữ và quản lý dữ liệu.</li>



<li><strong>Dễ bảo trì: </strong>Các cấu trúc có thể được sửa đổi và cập nhật một cách dễ dàng mà không ảnh hưởng đến các phần khác của chương trình.</li>



<li><strong>Tính mở rộng: </strong>Khi yêu cầu của chương trình thay đổi, các cấu trúc dữ liệu có thể được thay đổi hoặc thêm mới để đáp ứng các yêu cầu mới.</li>
</ul>



<h1 class="wp-block-heading" id="aioseo-cac-cu-truc-d-liu-ph-bin-la-gi">Các cấu trúc dữ liệu phổ biến là gì?</h1>



<p>Dưới đây là 8 cấu trúc phổ biến nhất trong lập trình:</p>



<h2 class="wp-block-heading" id="aioseo-mng-array">Mảng (Array):</h2>



<p>Mảng là một cấu trúc dữ liệu Linner cho phép lưu trữ nhiều giá trị của cùng kiểu dữ liệu trong một biến. Thay vì cần tạo nhiều biến riêng lẻ để lưu trữ các giá trị đó, ta có thể sử dụng một mảng để lưu trữ chúng. Mảng được biểu diễn dưới dạng một danh sách các giá trị, mỗi giá trị có một vị trí riêng được gọi là chỉ số (index).</p>



<p>Mảng được sử dụng để lưu trữ các phần tử có độ dài cố định và không thay đổi và khi cần truy cập nhanh đến các phần tử thông qua chỉ số.</p>



<figure class="wp-block-image size-full is-resized"><img loading="lazy" decoding="async" width="800" height="396" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/Array.jpg" alt="" class="wp-image-167" style="width:839px;height:auto"/></figure>



<p class="has-text-align-center"><strong>Cách hoạt động của Mảng (Array)</strong></p>



<p>Mảng có thể được phân thành hai loại khác nhau: </p>



<ul>
<li>Mảng một chiều.</li>



<li>Mảng đa chiều.</li>
</ul>



<p>Một số ứng dụng của mảng bao gồm:</p>



<ul>
<li>Lưu trữ một danh sách các phần tử dữ liệu thuộc cùng một kiểu dữ liệu.</li>



<li>Hỗ trợ lưu trữ phụ cho các cấu trúc khác.</li>



<li>Lưu trữ các phần tử dữ liệu của một cây nhị phân (binary tree) có số lượng cố định.</li>



<li>Lưu trữ ma trận bằng cách dùng bảng hai chiều.</li>
</ul>



<h2 class="wp-block-heading" id="aioseo-danh-sach-lien-kt-linked-list">Danh sách liên kết (Linked List):</h2>



<p>Một danh sách liên kết (Linked List) là một cấu trúc dữ liệu được sử dụng để lưu trữ một tập hợp các phần tử dữ liệu dưới dạng các nút (node). Mỗi nút chứa dữ liệu thực tế và các con trỏ (pointer) đến các nút khác trong danh sách. </p>



<p>Linked List được sử dụng khi cần lưu trữ các phần tử có độ dài khác nhau và cần thêm hoặc xóa phần tử một cách linh hoạt.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="800" height="396" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/Array-1.jpg" alt="" class="wp-image-168"/></figure>



<p class="has-text-align-center"><strong>Cách hoạt động của Danh sách liên kết (LinkedList)</strong></p>



<p>Danh sách liên kết (Linked List) có thể được phần thành các loại sau: </p>



<ul>
<li>Danh sách liên kết đơn (Singly Linked List). </li>



<li>Danh sách liên kết kép (Doubly Linked List).</li>



<li>Danh sách liên kết vòng (Circular Linked List).</li>
</ul>



<p>Một số ứng dụng của Linked List:</p>



<ul>
<li>Giúp triển khai các cấu trúc khác như stack, queue, binary tree và graph có kích thước được xác định trước. </li>



<li>Giúp triển khai các chức năng quản lý bộ nhớ động (dynamic memory) của hệ điều hành.</li>



<li>Hổ trợ triển khai các phép toán như đa thức.</li>



<li>Thực hiện tuần tự vòng các tác vụ bằng Circular Linked List. Vd: các vật phẩm trong một trò chơi được thiết lập xoay vòng và xuất hiện lại khi cần thiết.</li>



<li>Sử dụng để triển khai các nút chuyễn tiếp và quay lại trong trình duyệt web. Vd: SlideShow trong web</li>
</ul>



<h2 class="wp-block-heading" id="aioseo-hang-di-queue">Hàng đợi (Queue):</h2>



<p>Hàng đợi là một cấu trúc dữ liệu tuyến tính tương tự như Stack, trong đó phần tử đầu tiên được chèn vào đầu hàng đợi và phần tử cuối cùng được chèn vào cuối hàng đợi. Nó tương tự như một hàng đợi ở quầy bán vé, người đến trước sẽ được phục vụ trước. </p>



<p>Queue được sử dụng khi cần quản lý các hoạt động kiểu FIFO (<strong>First in First Out</strong>) và sử lý các yêu cầu một các tuần tự.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="800" height="402" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/queue.jpg" alt="" class="wp-image-171"/></figure>



<p class="has-text-align-center"><strong>Cách hoạt động của Hàng đợi (Queue)</strong></p>



<p>Hàng đợi (Queue) gồm các loại sau: </p>



<ul>
<li>Hàng đợi đơn giản (Simple Queue).</li>



<li>Hàng đợi vòng (Circular Queue).</li>



<li>Hàng đợi ưu tiên (Priority Queue).</li>



<li>Hàng đợi kép (Dequeue).</li>
</ul>



<p>Một số ứng dụng của Queue: </p>



<ul>
<li>Dùng để tìm độ rộng của Graph.</li>



<li>Quản lý các tác vụ trên hệ điều hành, công việc trên máy tính đảm bảo các tác vụ được thực thi theo đúng thứ tự.</li>



<li>Xử lý các sự kiện bất ngờ và ưu tiên cao trong ứng dụng người dùng.</li>
</ul>



<h2 class="wp-block-heading" id="aioseo-ngan-xp-stack">Ngăn xếp (Stack):</h2>



<p>Một Stack là một cấu trúc dữ liệu tuyến tính mà theo nguyên tắc LIFO (Last In, First Out), tức là phần tử cuối cùng được thêm vào Stack sẽ được lấy ra đầu tiên. Các phép tính thêm và xóa phần tử trong Stack, gọi là đỉnh của Stack.</p>



<p>Stack được sử dụng khi cần quản lý các hoạt động theo kiểu LIFO và xử lý yêu cầu ngược lại với hàng đợi.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="800" height="400" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/stack.jpg" alt="" class="wp-image-172"/></figure>



<p class="has-text-align-center"><strong>Cách hoạt động của Ngăn xếp (Stack)</strong></p>



<p>Các hoạt động chính trong Stack như sau:</p>



<ul>
<li><strong>Push: </strong>Thao tác để chèn một phần tử mới vào Stack.</li>



<li><strong>Pop</strong>: Thao tác để xóa các phần tử từ Stack.</li>
</ul>



<p>Một số ứng dụng của Stack:</p>



<ul>
<li>Dùng để xác định cú pháp biểu thức.</li>



<li>Dùng để đảo ngược một chuỗi(strings).</li>



<li>Tìm kiếm theo chiều sâu trong đồ thị (Graph) và cây (Tree).</li>



<li>Sử dụng trong hệ thống UNDO và REDO trong các chức năng chỉnh sửa.</li>
</ul>



<h2 class="wp-block-heading" id="aioseo-cay-tree">Cây (Tree):</h2>



<p>Cây (Tree) là một cấu trúc dữ liệu phi tuyến tính và một hệ thống phân cấp chứa tập hợp các nút sao cho mỗi nút trong cây lưu trữ một giá trị và một danh sách các tham chiếu đến các nút khác. Các nút được chia ra làm một nút trung tâm, các nút cấu trúc và các nút lá.</p>



<p>Tree được sử dụng khi cần tìm kiếm nhanh chóng các phần tử trong cây hoặc lưu trữ dữ liệu phân cấp.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="800" height="400" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/Tree.jpg" alt="" class="wp-image-173"/></figure>



<p class="has-text-align-center"><strong>Cách hoạt động của Cây (Tree)</strong></p>



<p>Cây (Tree) có thể được phân thành các loại như sau:</p>



<ul>
<li>Cây nhị phân (Binary Tree)</li>



<li>Cây tìm kiếm nhị phân (Binary Search Tree)</li>



<li>Cây AVL (AVL Tree)</li>



<li>Cây B (B-Tree)</li>
</ul>



<p>Một số ứng dụng của Tree:</p>



<ul>
<li>Dùng để triễn khai lập chỉ mục trong cơ sở dữ liệu </li>



<li>Giúp quá trình quét phân tích cú pháp, tạo mã và đánh giá biểu thức toán học trong thiết kế trình biên dịch</li>



<li>Thực hiện cấu trúc phân cấp trong hệ thống máy tính như các thư mục hoặc tệp.</li>



<li>Làm thuật toán tìm đường đi trong ứng dụng AI,Robot hoặc Game.</li>
</ul>



<p>Đồ thị (Graph):</p>



<p>Đồ thị (graph) là một cấu trúc dữ liệu bao gồm các điểm và các liên kết kết nối giữa chúng. Các điểm được gọi là đỉnh hoặc nút, và các liên kết được gọi là cạnh.</p>



<p>Graph được sử dụng để mô hình hóa các mối quan hệ giữa các thực thể trong thể giới thực. Ví dụ, một đồ thị có thể mô tả các mối quan hệ giữa các người dùng trên mạng xã hội. </p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="782" height="404" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/06/Graph.png" alt="" class="wp-image-175"/></figure>



<p class="has-text-align-center"><strong>Cách hoạt động của Đồ Thị (Graph)</strong></p>



<p>Đồ thị (Graph) được chia làm rất nhiều loại, một số loại đồ thị gồm:</p>



<ul>
<li><strong>Đồ thị vô hướng</strong> <strong>(Non-Directed Graph)</strong> và <strong>đồ thi có hướng</strong> <strong>(Directed Graph)</strong>.</li>



<li><strong>Đồ thị liên thông (Connected Graph) </strong>và <strong>Đồ thị không liên thông (Disconnected Graph)</strong>.</li>



<li><strong>Đơn đồ thị (Simple Graph) </strong>và <strong>Đa đồ thị (Multigraph).</strong></li>
</ul>



<p>Đồ thị có nhiều ứng dụng khác nhau, một số ứng dụng gồm:</p>



<ul>
<li>Biểu diễn các tuyến đường và mạng lưới trong các ứng dụng vận chuyễn và du lịch.</li>



<li>Hiển thị các tuyến đường trong GPS.</li>



<li>Tạo bản đồ liên kết tài liệu của các trang web.</li>



<li>Dùng trong các chuyễn động Robot và mạng nơ-ron.</li>
</ul>



<h2 class="wp-block-heading" id="aioseo-bng-bam-hash-table">Bảng Băm (Hash Table):</h2>



<p>Bảng băm (hash table): là một cấu trúc dữ liệu được sử dụng để lưu trữ và truy xuất các giá trị với mỗi giá trị được liên kết với một khóa (key) duy nhất. Hash Table hoạt động bằng cách sử dụng hằm băm (hash function) để tính toán giá trị băm (hash value) từ khóa và xác định vị trí lưu trữ tương ứng trong bảng băm.</p>



<p>Hash Table được sử dụng khi cần truy cập nhanh chóng đến các phần tử thông qua khóa và không cần thứ tự lưu trữ. </p>



<p>Hàm băm phổ biến sử dụng trong hashtable bao gồm phép chia (divsion method), phép nhân (multiplication method), và phép trộn (universal hasing).</p>



<p>Các ứng dụng của bảng băm bao gồm:</p>



<ul>
<li>Lưu trữ dữ liệu cấu trúc phức tạp như linked list, cây nhị phân (binary tree) và bảng băm khác.</li>



<li>Lưu trữ các mật khẩu đã bị mã hóa.</li>



<li>Tối ưu hóa truy vấn cơ sở dữ liệu bằng cách tạo bản đồ các khóa.</li>
</ul>



<h2 class="wp-block-heading" id="aioseo-dng-heap">Đống (Heap)</h2>



<p>Đống (heap) là một cấu trúc dữ liệu được sử dụng để lưu trữ một tập hợp các phần tử sao cho các phần tử này luôn tuân theo một quy tắc sắp xếp được xác định trước.</p>



<p>Heap được sử dụng khi cần tìm kiếm phần tử lớn nhất (hoặc nhỏ nhất) trong tập hợp phần tử và các thao tác thêm xóa sử phần tử thường xuyên.</p>



<p>Đống được chia thành hai loại chính:</p>



<ul>
<li>Max Heap</li>



<li>Min Heap</li>
</ul>



<p>Đống (heap) được sử dụng trong nhiều ứng dụng, bao gồm:</p>



<ul>
<li>Thuật toán heap sort sắp xếp một tập hợp các phần tử bằng cách sử dụng đống.</li>



<li>Các thuật toán tìm kiếm, chẳng hạn như thuật toán tìm kiếm đường đi ngắn nhất trong đồ thị (Dijkstra&#8217;s algorithm) hoặc thuật toán tìm kiếm A*.</li>



<li>Các thuật toán xử lý dữ liệu, như thuật toán xóa trung bình (median) trong một tập hợp các số.</li>



<li>Các ứng dụng trong hệ thống quản lý bộ nhớ (memory management) của hệ điều hành.</li>
</ul>



<h1 class="wp-block-heading" id="aioseo-u-dim-va-nhc-dim-ca-cac-cu-truc-d-liu">Ưu điểm và nhược điểm của các cấu trúc dữ liệu?</h1>



<figure class="wp-block-table"><table><tbody><tr><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-left" data-align="left">Ư<strong>u Điểm</strong></td><td class="has-text-align-left" data-align="left"><strong>Nhược điểm</strong></td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Mảng </strong><br><strong>(Array)</strong></td><td class="has-text-align-left" data-align="left"> + Cho phép truy cập ngẫu nhiên và nhanh chống đến các phần tử bằng chỉ số.<br><br>+ Có khả năng lưu trữ các phần tử liên tiếp trong bộ nhớ, giúp tăng hiệu suất truy cập.</td><td class="has-text-align-left" data-align="left">+ Kích thước mảng cố định, không thể thay đổi trong quá trình thực thi.<br><br>+ Không thể chèn hoặc xóa phần tử giữa mảng, mà không làm thay đổi vị trí của các phần tử khác.</td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Danh sách liên kết</strong><br>(<strong>Linked List)</strong></td><td class="has-text-align-left" data-align="left">+ Cho phép lưu trữ các phần tử có độ dành khác nhau.<br><br>Có thể thêm hoặc xóa phần tử một cách linh hoạt.<br><br>Khả năng mở rộng kích thước danh sách trong quá trinh thực thi.</td><td class="has-text-align-left" data-align="left">+ Không thể truy cập ngẫu nhiên đến các phần tử, mà phải duyệt danh sách từ đầu đến cuối.<br><br>+ Tốc độ truy cập chậm hơn so với mảng.</td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Hàng đợi</strong><br><strong>(Queue)</strong></td><td class="has-text-align-left" data-align="left">+ Giúp quản lý các hoạt động theo kiểu <strong>&#8220;First-In-First-Out&#8221; (FIFO)</strong>.<br><br>+ Dễ dàng triễn khai và sử dụng trong các bài toán liên quan đến hàng đợi.</td><td class="has-text-align-left" data-align="left">+ Không thể truy cập ngẫu nhiên các phần tử.<br><br>+ Không thể chèn hoặc xóa phần tử ở giữa hàng đợi.</td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Ngăn xếp</strong><br><strong>(Stack)</strong></td><td class="has-text-align-left" data-align="left">+ Giúp quản lý các hoạt động theo kiểu <strong>&#8220;Last-In-First-Out&#8221; (LIFO)</strong>.<br><br>+ Dễ dàng triễn khai và sử dụng trong các bài toán liên quan đến ngăn xếp.</td><td class="has-text-align-left" data-align="left">+ Không thể truy cập ngẫu nhiên các phần tử.<br><br>+ Không thể chèn hoặc xóa phần tử ở giữa ngăn xếp.</td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Cây (Tree)</strong></td><td class="has-text-align-left" data-align="left">+ Cho phép tìm kiếm nhanh chóng các phần tử trong cây.<br><br>+ Thao tác thêm, xóa và tìm kiếm các phần tử có độ phức tạp thấp.<br><br>+ Có khả năng lưu trữ dữ liệu theo cấu trúc phân cấp.</td><td class="has-text-align-left" data-align="left">+ Phức tạp hơn so với các cấu trúc khác.<br><br>+ Đôi khi khó triễn khai và sử dụng.</td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Đồ thị (Graph)</strong></td><td class="has-text-align-left" data-align="left">+ Cho phép mô hình hóa các mói quan hệ phức tạp giữa các đối tượng. <br><br>+ Có khả năng thực hiện các thuật toán tìm kiếm, duyệt và phân tích đồ thị.</td><td class="has-text-align-left" data-align="left">+ Phức tạp hơn so với các cấu trúc khác.<br><br>+ Đôi khi khó triễn khai và sử dụng.</td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Bảng băm (Hash Table)</strong></td><td class="has-text-align-left" data-align="left">+ Cho phép truy cập nhanh chóng đến các phần tử thông qua khóa.<br><br>+ Khả năng lưu trữ các phần tử không có thứ tự.</td><td class="has-text-align-left" data-align="left">+ Có thể xảy ra hiện tượng xung đột khóa (Collision).<br><br>+ Không thể thực hiện các thao tác truy vấn phức tạp.</td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Đống (Heap)</strong></td><td class="has-text-align-left" data-align="left">+ Cho phép truy cập nhanh chóng đến các phần tử lớn nhất hoặc nhỏ nhất trong đống.<br><br>+ Thao tác thêm, xóa phần tử có độ phức tạp thấp.</td><td class="has-text-align-left" data-align="left">+ Không thể truy cập ngẫu nhiên các phần tử.<br><br>+ Không thể tìm kiếm phần tử trong đống</td></tr></tbody></table></figure>



<h1 class="wp-block-heading" id="aioseo-c">Các thao tác phổ biến trên cấu trúc dữ liệu:</h1>



<p>Các thao tác phổ biến bao gồm:</p>



<ul>
<li><strong>Thêm phần tử:</strong>&nbsp;Thêm một phần tử mới vào cấu trúc dữ liệu.</li>



<li><strong>Xóa phần tử</strong>: Xóa một phần tử khỏi cấu trúc.</li>



<li><strong>Truy cập phần tử</strong>: Truy cập một phần tử trong cấu trúc để đọc hoặc chỉnh sửa giá trị của nó.</li>



<li><strong>Sắp xếp:</strong>&nbsp;Sắp xếp các phần tử theo một tiêu chí nào đó.</li>



<li><strong>Tìm kiếm:</strong>&nbsp;Tìm kiếm một phần tử dựa trên giá trị của nó.</li>



<li><strong>Thay đổi kích thước</strong>: Thay đổi kích thước của cấu trúc để đáp ứng nhu cầu lưu trữ dữ liệu.</li>
</ul>



<p>Các thao tác này có thể được thực hiện trên các loại cấu trúc khác nhau bằng các sử dụng các thuật toán và phương pháp phù hợp. Vì vậy, bạn sẽ cần tìm hiểu kỹ hơn về cấu trúc để sử dụng chúng một cách hiệu quả và tối ưu.</p>



<h1 class="wp-block-heading" id="aioseo-cac-lu-y-khi-s-dng-cu-truc-d-liu">Các lưu ý khi sử dụng cấu trúc dữ liệu:</h1>



<ul>
<li><strong>Lựa chọn cấu trúc dữ liệu phù hợp.</strong>&nbsp;Không có cấu trúc nào phù hợp cho tất cả các vấn đề. Vì vậy, bạn cần chọn loại phù hợp cho từng vấn đề cụ thể.</li>



<li><strong>Đảm bảo tính an toàn và bảo mật của dữ liệu</strong>. Điều này bao gồm bảo vệ dữ liệu khỏi các cuộc tấn công từ bên ngoài và bảo vệ dữ liệu khỏi các lỗi trong chương trình.</li>



<li><strong>Tối ưu hóa cấu trúc dữ liệu</strong>. Đây là quá trình tìm kiếm cấu trúc phù hợp nhất để đáp ứng các yêu cầu của chương trình và đảm bảo hiệu năng và tốc độ thực thi tối đa.</li>



<li><strong>Kiểm tra lỗi và xử lý ngoại lệ</strong>. Các cấu trúc có thể gặp phải các lỗi khác nhau như lỗi tràn bộ nhớ và lỗi truy xuất. Việc kiểm tra lỗi và xử lý ngoại lệ sẽ giúp đảm bảo tính ổn định và an toàn của chương trình.</li>



<li><strong>Hiểu rõ các thao tác và cách sử dụng</strong>. Hiểu rõ các thao tác và cách sử dụng của các cấu trúc sẽ giúp bạn sử dụng chúng một cách hiệu quả và tránh các lỗi có thể phát sinh.</li>



<li><strong>Bảo trì và cập nhật</strong>. Các cấu trúc có thể cần được bảo trì và cập nhật để đáp ứng các yêu cầu mới và giảm thiểu các lỗi và vấn đề.</li>
</ul>



<h1 class="wp-block-heading" id="aioseo-khac-bit-gia-kiu-d-liu-va-cu-truc-d-liu-la-gi">Khác biệt giữa kiểu dữ liệu và cấu trúc dữ liệu là gì?</h1>



<p>Kiểu dữ liệu xác định các loại dữ liệu có thể được sử dụng trong chương trình thì cấu trúc dữ liệu xác định các dữ liệu được tổ chức và quản lý trong bộ nhớ. Thực tế, còn khá nhiều bạn nhầm lẫn giữa hai khái niệm này. Bảng phân tích dưới đây sẽ làm rõ sự khác biệt:</p>



<figure class="wp-block-table"><table><tbody><tr><td class="has-text-align-center" data-align="center"><strong>Tính chất</strong></td><td><strong>Kiểu dữ liệu (Data Type)</strong></td><td><strong>Cấu trúc dữ liệu (Data Structure)</strong></td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Mô tả</strong></td><td>Khái niệm trừu tượng để mô tả kiểu dữ liệu của một giá trị</td><td></td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Loại dữ liệu</strong></td><td>Là hình thức của biến có thể được gán giá trị.&nbsp; Nó xác định rằng biến cụ thể sẽ gán các giá trị của kiểu dữ liệu cụ thể</td><td>Là một tập hợp các loại dữ liệu khác nhau. Toàn bộ dữ liệu đó có thể được đại diện bằng một đối tượng và sử dụng trong toàn bộ chương trình.</td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Khả năng lưu</strong></td><td>Có thể lưu trữ giá trị nhưng không lưu trữ dữ liệu</td><td>Lưu trữ nhiều loại dữ liệu trong một đối tượng.</td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Triễn khai</strong></td><td>Triễn khai trừu tượng (absatract implementation)</td><td>Triển khai cụ thể (concrete implementation).</td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Độ phức tạp của thuật toán</strong></td><td>Không có độ phức tạp của thuật toán</td><td>Độ phức tạp của thuật toán có vai trò quan trọng.</td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Lưu trữ giá</strong></td><td>Không lưu trữ giá trị, chỉ đại diện cho kiểu dữ liệu</td><td>Dữ liệu và giá trị của nó được lưu trữ trong không gian bộ nhớ chính của máy tính.</td></tr><tr><td class="has-text-align-center" data-align="center"><strong>Ví dụ</strong></td><td>Ví dụ int, float, double, …</td><td>Ví dụ stack, queue, tree, …</td></tr></tbody></table></figure>



<h1 class="wp-block-heading" id="aioseo-kt-lun">Kết luận:</h1>



<p>Tóm lại, cấu trúc dữ liệu là một phần quan trọng của lập trình không thể bỏ qua. Việc tìm hiểu về các cấu trúc khác nhau sẽ giúp bạn xây dựng các chương trình, ứng dụng hiệu quả và tối ưu. Hy vọng qua bài viết này, đã giúp bạn có cái nhìn rõ hơn về cấu trúc dữ liệu và các cấu trúc phổ biến nhất hiện nay!</p>



<p>Ở bài viết sau mình sẽ viết cụ thể hơn về từng loại cấu trúc dữ liệu và triễn khai nó trên ngôn ngữ C. Cảm ơn các bạn đã xem bài viết này! </p>
]]></content:encoded>
					
					<wfw:commentRss>https://nttkdeveloper.github.io/tuankhanhblog/2024/06/04/cau-truc-du-lieu-8-cau-truc-pho-bien-nhat-va-ung-dung/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Sử dụng pin năng lượng mặt trời cho Arduino</title>
		<link>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/29/su-dung-pin-nang-luong-mat-troi-cho-arduino/</link>
					<comments>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/29/su-dung-pin-nang-luong-mat-troi-cho-arduino/#respond</comments>
		
		<dc:creator><![CDATA[tuankhanh]]></dc:creator>
		<pubDate>Wed, 29 May 2024 09:41:57 +0000</pubDate>
				<category><![CDATA[arrduino]]></category>
		<category><![CDATA[libarry_arrduino]]></category>
		<category><![CDATA[lowpower]]></category>
		<guid isPermaLink="false">https://itblog.id.vn/?p=68</guid>

					<description><![CDATA[Table of Contents: Giới thiệu: Pin năng lượng mặt trời, còn gọi là tấm pin quang điện, là thiết bị chuyển đổi ánh sáng mặt trời thành điện năng thông qua hiệu ứng quang điện. Khi được chiếu sáng, các tế bào quang điện trong tấm pin sẽ tạo ra dòng điện một chiều. Đối [&#8230;]]]></description>
										<content:encoded><![CDATA[
<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1832" height="673" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/20240526_10582211.jpg" alt="backgorund image" class="wp-image-125"/></figure>



<h2 class="wp-block-heading"><strong>Table of Contents</strong>:</h2>



<div class="wp-block-aioseo-table-of-contents"><ul><li><a href="#aioseo-gii-thiu">Gi&#x1EDB;i thi&#x1EC7;u:</a></li><li><a href="#aioseo-chun-b-linh-kin">Chu&#x1EA9;n b&#x1ECB; linh ki&#x1EC7;n:</a></li><li><a href="#aioseo-tin-hanh">Ti&#x1EBF;n h&#xE0;nh:</a><ul><li><a href="#aioseo-cach-mc-pin-nang-lng-mt-tri">C&#xE1;ch m&#x1EAF;c pin n&#x103;ng l&#x1B0;&#x1EE3;ng m&#x1EB7;t tr&#x1EDD;i:</a></li><li><a href="#aioseo-b-n-dnh-din-ap-cho-arduino">B&#x1ED9; &#x1ED5;n &#x111;&#x1ECB;nh &#x111;i&#x1EC7;n &#xE1;p cho arduino:</a></li></ul></li><li><a href="#aioseo-kt-lun">K&#x1EBF;t lu&#x1EAD;n:</a></li></ul></div>



<h2 class="wp-block-heading" id="aioseo-gii-thiu">Giới thiệu:</h2>



<p>Pin năng lượng mặt trời, còn gọi là tấm pin quang điện, là thiết bị chuyển đổi ánh sáng mặt trời thành điện năng thông qua hiệu ứng quang điện. Khi được chiếu sáng, các tế bào quang điện trong tấm pin sẽ tạo ra dòng điện một chiều. Đối với Arduino, pin năng lượng mặt trời có thể cung cấp nguồn điện sạch và bền vững cho các dự án. Để sử dụng, cần kết nối tấm pin với một mạch điều chỉnh điện áp (voltage regulator) để đảm bảo điện áp ổn định, rồi sau đó nối mạch này với Arduino. Điều này giúp Arduino hoạt động mà không cần nguồn điện từ lưới điện, rất thích hợp cho các ứng dụng ngoài trời cách xa nguồn điện lưới và các hệ thống tự động. </p>



<p>Và trong bài viết này chúng ta sẽ cùng tìm hiểu về cách triễn khai, pin năng lượng mặt trời vào một dự án arduino. </p>



<h2 class="wp-block-heading" id="aioseo-chun-b-linh-kin">Chuẩn bị linh kiện:</h2>



<ul>
<li><a href="https://dke.vn/khac/pin-va-phu-kien/pin-nang-luong-mat-troi-6v-3w-kem-khung">Pin năng lượng mặt trời 6V 3W kèm khung &#8211; dke.vn &#8211; Cần Thơ</a> (Các bạn có thể dùng những loại pin năng lượng khác, với điện áp dao động từ 4.4v &#8211; 6v, nếu có những tấm pin điện áp thấp thì các bạn có thể tham khảo bài viết <a href="https://itblog.id.vn/?p=78" target="_blank" rel="noopener" title="">này</a> để biết cách mắc giúp tăng điện áp cho pin năng lượng).</li>



<li><a href="https://dke.vn/khac/pin-va-phu-kien/pin-18650-3.7v-2000ma">Pin 18650 3.7V 2000mA &#8211; dke.vn &#8211; Cần Thơ</a> (2 viên, tùy thuộc vào lượng điện tiêu thụ của dự án bạn đang sử dụng).</li>



<li><a href="https://dke.vn/khac/pin-va-phu-kien/de-2-pin-18650-(song-song)">Đế 2 pin 18650 (song song) &#8211; dke.vn &#8211; Cần Thơ</a> </li>



<li><a href="https://dke.vn/module-cam-bien/hien-thi/mach-hien-thi-dung-luong-pin-da-nang-1-2-3-4-5-6-7-8s">Mạch hiển thị dung lượng pin đa năng 1/2/3/4/5/6/7/8S &#8211; dke.vn &#8211; Cần Thơ</a></li>



<li><a href="https://dke.vn/module-cam-bien/sac-pin/mach-sac-pin-nang-luong-mat-troi-cn3065">Mạch sạc pin năng lượng mặt trời CN3065 &#8211; dke.vn &#8211; Cần Thơ</a> </li>



<li><a href="https://dke.vn/module-cam-bien/mach-nguon/mach-tang-ap/mach-tang-ap-2a-(mt3608)">Mạch tăng áp 2A (MT3608) &#8211; dke.vn &#8211; Cần Thơ</a></li>



<li><a href="https://dke.vn/module-cam-bien/kit-phat-trien-mach-nap/arduino/arduino-pro-mini-5v-16mhz">Arduino pro mini 5V 16Mhz &#8211; dke.vn &#8211; Cần Thơ</a></li>



<li>Và một số dây kết nối DC, USB, &#8230;..</li>
</ul>



<h2 class="wp-block-heading" id="aioseo-tin-hanh">Tiến hành:</h2>



<h3 class="wp-block-heading" id="aioseo-cach-mc-pin-nang-lng-mt-tri">Cách mắc pin năng lượng mặt trời:</h3>



<p>Pin mặt trời ở đây, mình dùng các mắc song song để tăng dòng điện, mà vẫn giữ nguyên điện áp và khi một pin năng lượng mặt trời bị hỏng sẽ không bị ảnh hưởng đến cả hệ thống.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1152" height="648" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/mach-pin-mat-troi.jpg" alt="" class="wp-image-132"/></figure>



<h3 class="wp-block-heading" id="aioseo-b-n-dnh-din-ap-cho-arduino">Bộ ổn định điện áp cho arduino:</h3>



<p>Ở đây mình sử dụng arduino pro mini để tiết kiệm năng lượng, bạn có thể tham khảo bài viết <a href="https://itblog.id.vn/?p=70" target="_blank" rel="noopener" title="">này</a> để sử dụng thư viện tiết kiệm điện năng.</p>



<p>Đầu ra của pin năng lượng mặt trời nối thẳng vào đầu vào solar trên <a href="https://dke.vn/module-cam-bien/sac-pin/mach-sac-pin-nang-luong-mat-troi-cn3065" title="">mạch sạc cn3065</a>., </p>



<p>Do là ở đây mình sửa dụng <a href="https://dke.vn/module-cam-bien/sac-pin/mach-sac-pin-nang-luong-mat-troi-cn3065" title="">mạch sạc cn3065</a> nên mắc pin song song và thêm một mạch báo pin nữa để tiện theo dõi tình trạng pin, rồi nối chúng vào cỏng BAT trên<a href="https://dke.vn/module-cam-bien/sac-pin/mach-sac-pin-nang-luong-mat-troi-cn3065" title=""> mạch cn3065</a>. về phần nguồn cấp điện vào mạch arduino, <strong>mình khuyên các bạn cấp nguồn vào cổng RAW trên arduino pro mini(hoặc là cổng pin hoặc vin trên các mạch arduino khác</strong>), để nguồn diện vào được cách li và không phát sình về lỗi sau này. </p>



<p>Do cổng RAW yêu cầu 6-9V nên mình dùng thêm một <a href="https://dke.vn/module-cam-bien/mach-nguon/mach-tang-ap/mach-tang-ap-2a-(mt3608)" title="">mạch tăng áp</a>, để chuyễn nguồn điện 4.2V của pin lên 7V cấp vào cỗng RAW. Và những thiết bị sài nguồn 5v khác mình sẽ lấy từ cỗng VCC trên mạch. Đầu vào của mạch tăng áp mình nối vào cổng OUT trên mạch cn3065.</p>



<p>Đây là hình minh họa:</p>



<figure class="wp-block-image size-full is-resized"><img loading="lazy" decoding="async" width="1152" height="517" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/Bo-on-dinh-dien-ap-cho-pin-nang-luong-mat-troi1.jpg" alt="Bo-on-dinh-dien-ap-cho-pin-nang-luong-mat-troi1.jpg" class="wp-image-144" style="width:840px;height:auto"/></figure>



<p>Do ở đây mình dụng pin năng lượng mặt trời có điện áp tối đa là 7V nên các bạn dùng giống mình thì nên mua thêm một cái tản nhiệt nhỏ cho vùng mình khoanh trong bên dưới:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1080" height="1080" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/mach-cn3065.jpg" alt="" class="wp-image-145"/></figure>



<h2 class="wp-block-heading" id="aioseo-kt-lun">Kết luận:</h2>



<p>Ok vậy là mình đã hướng dẫn các bạn sử dung pin năng lượng mặt trời cho arduino. Và có một số lưu ý cho các bạn là các bạn có thể thay thế mạch cn3065 thành mạch sạc pin 1s (TP4056). Và mắc đường điện lấy ra ở cổng BAT chứ không phải cổng OUT. Các bạn có thể thử theo cách build đó, nó sẽ rẻ hơi so với việc dùng mạch sạc pin cn3065. Cảm ơn các bạn đã xem bài viết, hãy để lại bình luận nếu các bạn cảm thấy nó hay. Chúc các bạn xây dựng mạch thành công! ❤️❤️❤️❤️❤️</p>



<iframe loading="lazy" width="560" height="315" src="https://www.youtube.com/embed/LK1jLZdf7Jg?si=KAkzHYJZyvoQ6qtt" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
]]></content:encoded>
					
					<wfw:commentRss>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/29/su-dung-pin-nang-luong-mat-troi-cho-arduino/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Sử dụng thư viện Low Power để hạ lượng điện tiêu thụ của arduino</title>
		<link>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/24/su-dung-thu-vien-low-power-de-ha-luong-dien-tieu-thu-cua-arduino-phan-1/</link>
					<comments>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/24/su-dung-thu-vien-low-power-de-ha-luong-dien-tieu-thu-cua-arduino-phan-1/#comments</comments>
		
		<dc:creator><![CDATA[tuankhanh]]></dc:creator>
		<pubDate>Fri, 24 May 2024 10:20:25 +0000</pubDate>
				<category><![CDATA[arrduino]]></category>
		<category><![CDATA[arduino]]></category>
		<category><![CDATA[Internet of Things]]></category>
		<category><![CDATA[IOT]]></category>
		<guid isPermaLink="false">https://itblog.id.vn/?p=70</guid>

					<description><![CDATA[&#160;Table of Content: Giới thiệu: Vấn đề tiêu thụ điện năng của bộ điều khiển là mối quan tâm hàng đầu trong thiết kế công suất thấp. Bo mạch Arduino thường được sử dụng trong các thiết bị sử dụng pin hoặc sạc năng lượng mặt trời. Những thiết bị như vậy thường cách xa [&#8230;]]]></description>
										<content:encoded><![CDATA[
<figure class="wp-block-image aligncenter size-full"><img loading="lazy" decoding="async" width="600" height="250" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/image-8.png" alt="" class="wp-image-106"/></figure>



<h2 class="wp-block-heading"><strong>&nbsp;Table of Content</strong>:</h2>



<div class="wp-block-aioseo-table-of-contents"><ul><li><a href="#aioseo-gii-thiu">Gi&#x1EDB;i thi&#x1EC7;u:</a><ul><li><a href="#aioseo-chn-dung-bo-mch-arduino-cho-d-an">Ch&#x1ECD;n &#x111;&#xFA;ng bo m&#x1EA1;ch Arduino cho d&#x1EF1; &#xE1;n:</a></li></ul></li><li><a href="#aioseo-ch-d-nang-lng-thp-cho-arduino">Ch&#x1EBF; &#x111;&#x1ED9; n&#x103;ng l&#x1B0;&#x1EE3;ng th&#x1EA5;p cho Arduino:</a><ul><li><a href="#aioseo-ch-d-nhan-ri-idle-mode">Ch&#x1EBF; &#x111;&#x1ED9; nh&#xE0;n r&#x1ED7;i (Idle Mode):</a></li><li><a href="#aioseo-ch-d-gim-nhiu-adc-adc-noise-reduction-mode">Ch&#x1EBF; &#x111;&#x1ED9; gi&#x1EA3;m nhi&#x1EC5;u ADC (ADC Noise Reduction Mode).</a></li><li><a href="#aioseo-ch-d-tt-ngun-power-down-mode">Ch&#x1EBF; &#x111;&#x1ED9; t&#x1EAF;t ngu&#x1ED3;n (Power-Down Mode).</a></li><li><a href="#aioseo-ch-d-tit-kim-nang-lng-power-save-mode">Ch&#x1EBF; &#x111;&#x1ED9; ti&#x1EBF;t ki&#x1EC7;m n&#x103;ng l&#x1B0;&#x1EE3;ng (Power-Save Mode):</a></li><li><a href="#aioseo-ch-d-ch-standby-mode">Ch&#x1EBF; &#x111;&#x1ED9; ch&#x1EDD; (Standby Mode).</a></li><li><a href="#aioseo-ch-d-ch-m-rng-extended-standby-mode">Ch&#x1EBF; &#x111;&#x1ED9; ch&#x1EDD; m&#x1EDF; r&#x1ED9;ng (Extended Standby Mode).</a></li></ul></li><li><a href="#aioseo-kt-lun">K&#x1EBF;t lu&#x1EAD;n:</a></li></ul></div>



<h2 class="wp-block-heading" id="aioseo-gii-thiu">Giới thiệu:</h2>



<p>Vấn đề tiêu thụ điện năng của bộ điều khiển là mối quan tâm hàng đầu trong thiết kế công suất thấp. Bo mạch Arduino thường được sử dụng trong các thiết bị sử dụng pin hoặc sạc năng lượng mặt trời. Những thiết bị như vậy thường cách xa đường dây điện để thay pin định kỳ hoặc là thiết bị di động được thiết kế cho chu kỳ sạc định kỳ. Trong trường hợp như vậy, việc tối ưu hóa Arduino để tiêu thụ điện năng thấp là điều cần thiết. Tối ưu hóa Arduino cũng giúp đảm bảo rằng toàn bộ mạch được sử dụng hiệu quả nhất. Một số biện pháp có thể được áp dụng để giảm mức tiêu thụ điiện năng chung của bộ điều khiển. Tuynhiên, mức tiêu thụ điện năng thực của thiết bị vẫn phụ thuộc vào các thành phần ngoại vi kết nối tới vi điều khiển.</p>



<p>Có một số thủ thuật, mà các nhà thiết kế sử dụng để giảm mức tiêu thụ điện năng của bo mạch Arduino. Khi ưu tiên thiết kế công suất thấp, trước tiên các nhà thiết kế sẽ chọn bo mạch Arduino có điện áo hoạt động thấp hơn. Việc lựa chọn bo mạch Arduino không thể chỉ dựa trên điện áp hoạt động hoặc mức tiêu thụ điện năng. Thông thường, Arduino công suất thấp có thể không phù hợp với một số ứng dụng cụ thể. Các mạch arduino công suất thấp thường có ít tính năng phần cứng hơn, hoặc ít GPIO (kích thước thường sẽ nhỏ hơn). Bất kể bo mạch Arduino được chọn cho một ứng dụng nhất định, các nhà thiết kế hầu như sử dụng chế độ ngủ hoặc chế độ tiết kiệm năng lượng của arduino để tối ưu hóa mức tiêu thụ điện năng.</p>



<p>Ngoài việc chọn Arduino công suất thấp và sử dụng các chế độ tiết kiệm năng lượng, một số thủ thuật phần mềm và phần cứng có thể sử dụng để tiết kiệm năng lượng. Các phương pháp đó bao gồm: </p>



<ul>
<li>Giảm tốt độ xung nhịp.</li>



<li>Giảm điện áp hoạt động.</li>



<li>Tối ưu mã phần mềm.</li>
</ul>



<p>Mọi người lưu ý rằng việc can thiệp phần mềm không làm ảnh hưởng đến hiệu suất dự kiến của ứng dụng.</p>



<h3 class="wp-block-heading" id="aioseo-chn-dung-bo-mch-arduino-cho-d-an">Chọn đúng bo mạch Arduino cho dự án:</h3>



<p>Đầu tiên, bo mạch Arduino nhỏ nhất phù hợp với yêu cầu phải được chọn cho thiết kế tiêu thụ điện năng thấp. Nếu ứng dụng không có nhiều thành phần bên ngoài thì nên sử dụng Arduino nano hoặc Arduino Pro mini thay vì Arduino UNO hoặc Mega. Thông thường, Arduino Nano có mức tiêu thụ điện năng từ 20-30mA khi được cấp nguồn bằng pin 9V. Trong cùng một ứng dụng, Arduino Pro mini có thể tiêu thụ điện năng là 15-20mA. Arduino Pro mini 3V3 có mức tiêu thụ điện năng dưới 10mA. Nếu có một ứng dụng yêu cầu nhiều GPIO hoặc nhiều tính năng của vi điều khiển thì chỉ chọn Arduino UNO hoặc MEGA.</p>



<p>Điều thú vị là Arduino MEGA có nhiều GPIO và thiết bị ngoại vi tích hợp hơn, nhưng mức tiêu thụ điện năng của nó ít hơn 1/3 so với Arduino UNO. Tiêu thụ năng lượng của Arduino UNO thường là 100-120mA, trong khi đó MEGA chỉ có thể tiêu thụ ở trong khoảng 70-80mA cho cùng một ứng dụng. Ok không dài dòng nữa bây giờ chúng ta sẽ đến với thư viện Low Power.</p>



<h2 class="wp-block-heading" id="aioseo-ch-d-nang-lng-thp-cho-arduino">Chế độ năng lượng thấp cho Arduino:</h2>



<p>Cấc tốt nhất để giảm mức tiêu thụ điện năng của ứng dụng chạy pin là sử dụng chế dộ tiết kiệm năng lượng. Mỗi bộ vi điều khiển đều có chế độ ngủ hoặc chế độ tiết kiệm điện. Hầu như các bo mạch Arduino đều dựa trên bộ điều khiển ATmega328P, cung cấp sáu chế độ tiết kiệm năng lượng. Đây còn được gọi là chế độ ngủ hoặc chế độ chờ. Các chế độ này có thể được kích hoạt với sự trợ giúp của thư viện <a href="https://github.com/rocketscream/Low-Power" target="_blank" rel="noopener" title="">LowPower.h</a>. Sáu chế độ tiết kiệm năng lượng trong Arduino là:</p>



<ul>
<li>Chế độ nhàn rỗi (<strong>Idle Mode</strong>).</li>



<li>Chế độ giảm nhiễu ADC (<strong>ADC Noise Reduction Mode</strong>).</li>



<li>Chế độ tắt nguồn (<strong>Power-Down Mode</strong>).</li>



<li>Chế độ tiết kiệm năng lượng (<strong>Power-Save Mode</strong>).</li>



<li>Chế độ chờ (<strong>Standby Mode</strong>).</li>



<li>Chế độ chờ mở rộng (<strong>Extended Standby Mode</strong>)</li>
</ul>



<h3 class="wp-block-heading" id="aioseo-ch-d-nhan-ri-idle-mode">Chế độ nhàn rỗi (<strong>Idle Mode</strong>):</h3>



<p>Chế độ này cho phép dừng CPU nhưng vẫn có thể sử dụng <strong>SPI, USART, Watchdog, Timer, bộ so sánh tương tự</strong> vẫn có thể hoạt động.</p>



<p>CODE:</p>



<pre class="wp-block-code"><code>LowPower.idle(SLEEP_8S, ADC_OFF, TIMER2_OFF, TIMER1_OFF, TIMER0_OFF, SPI_OFF, USART0_OFF, TWI_OFF);</code></pre>



<h3 class="wp-block-heading" id="aioseo-ch-d-gim-nhiu-adc-adc-noise-reduction-mode">Chế độ giảm nhiễu ADC (<strong>ADC Noise Reduction Mode</strong>).</h3>



<p>Trong chế độ này, nó dừng CPU nhưng cho phép ADC, ngắt ngoài, USART, Watchdog và Timer hoạt động. Chúng ta có thể đánh thức arduino bằng cách:</p>



<ul>
<li>External Reset</li>



<li>Watchdog System Reset</li>



<li>Watchdog Interrupt</li>



<li>Brown-out Reset</li>



<li>2-wire Serial Interface address match</li>



<li>External level interrupt on INT</li>



<li>Pin change interrupt</li>



<li>Timer/Counter interrupt</li>



<li>SPM/EEPROM ready interrupt</li>
</ul>



<h3 class="wp-block-heading" id="aioseo-ch-d-tt-ngun-power-down-mode">Chế độ tắt nguồn (<strong>Power-Down Mode</strong>).</h3>



<p>Trong chế độ này, bộ dao động ngoài bị TẮT, nhưng ngắt ngoài vẫn hoạt động. Nó chỉ có thể bị đánh thức bởi một trong các phương pháp dưới đây:</p>



<ul>
<li>External Reset</li>



<li>Watchdog System Reset</li>



<li>Watchdog Interrupt</li>



<li>Brown-out Reset</li>



<li>2-wire Serial Interface address match</li>



<li>External level interrupt on INT</li>



<li>Pin change interrupt</li>
</ul>



<p>Hàm để sử dụng cho chế độ ngủ này:</p>



<p>CODE:</p>



<pre class="wp-block-code"><code>void loop()
{
 // Allow wake up pin to trigger interrupt on low.
attachInterrupt(0, wakeUp, LOW);
 LowPower.powerDown(SLEEP_FOREVER, ADC_OFF, BOD_OFF);
 // Disable external pin interrupt on wake up pin.
detachInterrupt(0);
 // Do something here
}</code></pre>



<h3 class="wp-block-heading" id="aioseo-ch-d-tit-kim-nang-lng-power-save-mode">Chế độ tiết kiệm năng lượng (<strong>Power-Save Mode</strong>):</h3>



<p>Chế độ ngủ này của arduino tương tự như chế độ Power-down, nếu bộ hẹn giờ hoặc bộ đếm được bật, nó sẽ ở trạng thái chạy ngay cả khi ngủ. Thiết bị có thể được đánh thức bằng cách sử dụng bộ đếm thời gian cho đến lúc nó bị tràn.</p>



<p>Nếu bạn không sử dụng bộ hẹn giờ hoặc bộ đếm, bạn nên sử dụng chế độ Power-down, thay vì chế độ Power-save.</p>



<h3 class="wp-block-heading" id="aioseo-ch-d-ch-standby-mode">Chế độ chờ (<strong>Standby Mode</strong>).</h3>



<p>Chế độ chờ giống hệt với chế độ Power-save, sự khác biệt duy nhất giữa chúng là bộ dao động ngoài vẫn tiếp tục chạy ở chế độ này.</p>



<h3 class="wp-block-heading" id="aioseo-ch-d-ch-m-rng-extended-standby-mode">Chế độ chờ mở rộng (<strong>Extended Standby Mode</strong>).</h3>



<p>Chế độ này tương tự như chế độ Power-save, chỉ với một ngoại lệ là bộ dao động tiếp tục chạy ở chế độ này. Thiết bị sẽ mất 6 chu kỳ để thức dậy tự chế độ Standby.</p>



<h2 class="wp-block-heading" id="aioseo-kt-lun">Kết luận:</h2>



<p>Thiết kế năng lượng thấp là mối quan tâm đáng kể trong các thiết bị nhúng chạy bằng pin. Arduino có thể được tối ưu hóa cho các ứng dụng tiêu thụ điện năng thấp bằng cách chọn Arduino công suất thấp, sử dụng các chế độ tiết kiệm năng lượng, giảm tốc độ xung nhịp, giảm điện áp hoạt động, vô hiệu hóa các thiết bị ngoại vi được sử dụng trong bản phác thảo Arduino và loại bỏ các thành phần bổ sung khỏi Arduino PCB.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/24/su-dung-thu-vien-low-power-de-ha-luong-dien-tieu-thu-cua-arduino-phan-1/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Ưu, nhược điểm của mắc nối tiếp và song song các tấm pin mặt trời?</title>
		<link>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/23/uu-nhuoc-diem-cua-mac-noi-tiep-va-song-song-cac-tam-pin-mat-troi/</link>
					<comments>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/23/uu-nhuoc-diem-cua-mac-noi-tiep-va-song-song-cac-tam-pin-mat-troi/#comments</comments>
		
		<dc:creator><![CDATA[tuankhanh]]></dc:creator>
		<pubDate>Thu, 23 May 2024 13:13:31 +0000</pubDate>
				<category><![CDATA[arrduino]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[arduino]]></category>
		<category><![CDATA[Internet of Things]]></category>
		<category><![CDATA[IOT]]></category>
		<category><![CDATA[Pin năng lượng mặt trời]]></category>
		<guid isPermaLink="false">https://itblog.id.vn/?p=78</guid>

					<description><![CDATA[Nối tiếp và song song là các phương thức kết nối phổ biến trong các hệ thống tấm pin mặt trời, mỗi phương thức đều có ưu điểm và nhược điểm riêng. Hiểu đặc điểm của chúng là rất quan trọng để chọn phương thức kết nối phù hợp. Đầu tiên, chúng ta hãy xem [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>Nối tiếp và song song là các phương thức kết nối phổ biến trong các hệ thống tấm pin mặt trời, mỗi phương thức đều có ưu điểm và nhược điểm riêng. Hiểu đặc điểm của chúng là rất quan trọng để chọn phương thức kết nối phù hợp.</p>



<h2 class="wp-block-heading"><strong>Đầu tiên, chúng ta hãy xem xét những ưu điểm và nhược điểm của kết nối nối tiếp.</strong></h2>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="540" height="221" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/image-5.png" alt="" class="wp-image-79"/></figure>



<p>Một trong những ưu điểm của kết nối nối tiếp là nó có thể tăng tổng công suất đầu ra mà không cần phải thay dây đầu ra dày hơn. Điều này có nghĩa là dây và thiết bị hiện có có thể được sử dụng để mang công suất đầu ra lớn hơn. Ví dụ: nếu bạn có hai tấm pin mặt trời 12V, việc kết nối chúng nối tiếp sẽ cung cấp cho bạn điện áp đầu ra 24V mà không cần phải thay thế bộ điều khiển pin 12V ban đầu. Phương pháp này có thể tiết kiệm chi phí và công sức.</p>



<p>Tuy nhiên, việc kết nối nối tiếp cũng có thể gây ra một số hậu quả. Khi hai bảng được mắc nối tiếp, nếu một trong số chúng bị bóng mờ hoặc hư hỏng và mất khả năng phát điện thì toàn bộ mạch sẽ bị gián đoạn, ngừng cung cấp điện cho tải bên ngoài. Nó tương tự như trường hợp các thiết bị khác trong mạch nối tiếp bị hỏng khiến toàn bộ mạch trở thành mạch hở. Vì vậy, khi sử dụng kết nối nối tiếp, điều quan trọng là phải đảm bảo rằng mỗi bảng hoạt động bình thường để tránh làm gián đoạn toàn bộ mạch điện.</p>



<h2 class="wp-block-heading">Bây giờ chúng ta hãy xem xét những ưu điểm và nhược điểm của kết nối song song.</h2>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="543" height="240" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/image-7.png" alt="" class="wp-image-82"/></figure>



<p>Ưu điểm của kết nối song song là miễn là các tấm pin có cùng điện áp đầu ra thì có thể kết nối song song với bộ điều khiển để sử dụng. Trong một kết nối song song, sức mạnh của tất cả các bảng sẽ tăng lên. Ví dụ: nếu bạn kết nối song song bảng 50W và bảng 100W, công suất đầu ra của chúng sẽ vào khoảng 150W. Phương pháp này có thể tăng tổng công suất đầu ra mà không ảnh hưởng đến điện áp chung.</p>



<p>Không giống như kết nối nối tiếp, nếu một bảng trong kết nối song song bị hỏng và trở thành mạch hở, nó sẽ không ảnh hưởng đến điện áp chung mà chỉ ảnh hưởng đến nguồn điện. Điều này có nghĩa là các tấm nền khác vẫn có thể tiếp tục hoạt động, đảm bảo sự ổn định và tin cậy của hệ thống.</p>



<p>Tóm lại, kết nối nối tiếp có thể tăng tổng công suất đầu ra, trong khi kết nối song song có thể duy trì cùng công suất đầu ra và tăng tổng điện áp đầu ra. Việc lựa chọn phương pháp kết nối phù hợp phụ thuộc vào yêu cầu cụ thể và thiết kế hệ thống. Cho dù bạn chọn kết nối nối tiếp hay song song, điều quan trọng là phải đảm bảo rằng mỗi bảng điều khiển đều hoạt động bình thường để đảm bảo sự ổn định và độ tin cậy của hệ thống.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/23/uu-nhuoc-diem-cua-mac-noi-tiep-va-song-song-cac-tam-pin-mat-troi/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Biên dịch nhân Linux và tạo ISO có thể khởi động</title>
		<link>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/17/bien-dich-nhan-linux-va-tao-iso-co-the-khoi-dong/</link>
					<comments>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/17/bien-dich-nhan-linux-va-tao-iso-co-the-khoi-dong/#respond</comments>
		
		<dc:creator><![CDATA[tuankhanh]]></dc:creator>
		<pubDate>Fri, 17 May 2024 08:44:15 +0000</pubDate>
				<category><![CDATA[Linux from scrach]]></category>
		<category><![CDATA[iso]]></category>
		<category><![CDATA[LFS]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[Linux From Scrach]]></category>
		<category><![CDATA[linux kernel]]></category>
		<guid isPermaLink="false">https://itblog.id.vn/?p=32</guid>

					<description><![CDATA[Có rất nhiều hướng dẫn trên internet hướng dẫn bạn biên dịch nhân Linux từ nguồn, tạo hệ thống tệp từ BusyBox và sau đó chạy nó bằng QEMU. Tuy nhiên, tôi muốn tạo một ISO có thể khởi động từ nó để tôi có thể khởi động nó trên máy tính của riêng mình. [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>Có rất nhiều hướng dẫn trên internet hướng dẫn bạn biên dịch nhân Linux từ nguồn, tạo hệ thống tệp từ BusyBox và sau đó chạy nó bằng QEMU. Tuy nhiên, tôi muốn tạo một ISO có thể khởi động từ nó để tôi có thể khởi động nó trên máy tính của riêng mình. Ok không dài dòng nữa chúng ta cũng bắt đầu thôi nào.</p>



<h2 class="wp-block-heading"><strong>Table of Contents</strong></h2>



<div class="wp-block-aioseo-table-of-contents"><ul><li><a href="#aioseo-lu-y">L&#x1B0;u &#xFD;:</a></li><li><a href="#aioseo-xay-dng-nhan-linux">X&#xE2;y d&#x1EF1;ng nh&#xE2;n Linux:</a><ul><li><a href="#aioseo-cu-hinh-va-bien-dch-nhan-linux">C&#x1EA5;u h&#xEC;nh v&#xE0; bi&#xEA;n d&#x1ECB;ch nh&#xE2;n linux</a></li></ul></li><li><a href="#aioseo-busybox">BusyBox:</a><ul><li><a href="#aioseo-ti-va-bien-dch-busybox">T&#x1EA3;i v&#xE0; bi&#xEA;n d&#x1ECB;ch BusyBox</a></li><li><a href="#aioseo-to-h-thng-tp">T&#x1EA1;o h&#x1EC7; th&#x1ED1;ng t&#x1EC7;p</a></li></ul></li><li><a href="#aioseo-kim-tra-ht-nhan-da-bien-dch-vi-qemu">Ki&#x1EC3;m tra h&#x1EA1;t nh&#xE2;n &#x111;&#xE3; bi&#xEA;n d&#x1ECB;ch v&#x1EDB;i QEMU:</a></li><li><a href="#aioseo-to-iso-co-kh-nang-khi-dng">T&#x1EA1;o ISO c&#xF3; kh&#x1EA3; n&#x103;ng kh&#x1EDF;i &#x111;&#x1ED9;ng:</a><ul><li><a href="#aioseo-chun-b-tp-tin">Chu&#x1EA9;n b&#x1ECB; t&#x1EAD;p tin</a></li><li><a href="#aioseo-to-tp-cu-hinh-grub">T&#x1EA1;o t&#x1EC7;p c&#x1EA5;u h&#xEC;nh Grub</a><ul></ul></li><li><a href="#aioseo-chung-toi-s-s-dng-grub-mkrescue-d-to-iso-co-th-khi-dng-ca-chung-toi-nhng-trc-khi-lam-nh-vy-chung-ta-phi-bit-liu-may-ch-hin-ti-ca-chung-ta-co-dc-khi-dng-bng-uefi-hay-bios-hay-khong-d-lam-nh-vy-hay-kim-tra-xem-th-mc-sys-firmware-efi-co-tn-ti-tren-h-thng-ca-bn-hay-khong-nu-co-may-tinh-ca-bn-s-dng-uefi-nu-khong-thi-do-la-bios-vy-ti-sao-bit-diu-nay-li-quan-trng-cac-grub-mkrescue-s-dng-ni-dung-grub-hin-dc-cai-dt-d-to-hinh-nh-iso-diu-nay-co-nghia-la-nu-h-diu-hanh-ca-bn-dc-khi-dng-trong-bios-rt-co-th-iso-dc-to-t-grub-mkrescue-hoan-toan-khong-h-tr-uefi-trong-mt-s-trng-hp-bo-mch-ch-uefi-h-tr-khi-dng-hinh-nh-bios-bng-cms-nhng-diu-do-khong-phi-luc-nao-cung-dung-nu-bn-mun-to-hinh-nh-cho-bios-t-may-ch-uefi-hoc-ngc-li-toi-khuyen-bn-nen-to-mt-may-o-debian-trong-virtualbox-virtualbox-h-tr-c-bios-va-uefi-trong-cai-dt-bo-mch-ch-ca-no-sau-khi-chn-cai-thich-hp-hay-cai-dt-debian-cai-dt-mng-la-d-va-di-chuyn-th-mc-cha-cac-th-mc-khi-dng-va-grub-sang-may-o-sau-do-tip-tc-dc-hng-dn-d-cu-hinh-grub-va-to-tp-tin-iso">Ki&#x1EC3;m tra ISO v&#x1EDB;i VirtualBox</a></li><li><a href="#3d8e">Kh&#x1EAF;c ph&#x1EE5;c &#x22;l&#x1ED7;i: h&#x1EA1;t nh&#xE2;n kh&#xF4;ng h&#x1ED7; tr&#x1EE3; CPU 64 bit&#x22;</a></li><li><a href="#8a22">Kh&#x1EAF;c ph&#x1EE5;c m&#xE0;n h&#xEC;nh &#x111;en sau khi grub khi kh&#x1EDF;i &#x111;&#x1ED9;ng trong UEFI</a></li><li><a href="#aioseo-kim-tra-phn-cng-thc">Ki&#x1EC3;m tra ph&#x1EA7;n c&#x1EE9;ng th&#x1EF1;c</a></li></ul></li><li><a href="#aioseo-ngun">Ngu&#x1ED3;n:</a></li></ul></div>



<h2 class="wp-block-heading" id="aioseo-lu-y">Lưu ý:</h2>



<ul>
<li>Bài viết này được viết trên môi trường linux. Nếu bạn làm nó trên Windows thì có thể cân nhắc sử dụng máy ảo hoặc wsl. </li>



<li>Cần kiến thức về một số câu lệnh cơ bản của linux.</li>



<li>Cần một bộ não (🤣🤣🤣).</li>
</ul>



<h2 class="wp-block-heading" id="aioseo-xay-dng-nhan-linux">Xây dựng nhân Linux:</h2>



<p>Bây giờ chúng ta sẽ tải nhân linux xuống máy tính của mình. Phiên bản mới nhất hiện tại là 6.9 và chúng ta sẽ sử dụng nó cho bài viết này. </p>



<pre class="wp-block-code"><code>wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.9.tar.xz
tar xf linux-6.9.tar.xz
cd linux-6.9/
</code></pre>



<p>Bây giờ chúng ta phải cài đặt thêm một số phần mềm nữa mới có thể biên dịch được nhân linux này.</p>



<pre class="wp-block-code"><code>sudo apt update &amp;&amp; sudo apt upgrade
sudo apt install build-essential flex libncurses5-dev bc libelf-dev bison</code></pre>



<p>Ok bây giờ đã xong. Chúng ta sẽ bắt đầu xây dựng nhân linux này. Lưu ý ở đây mình sử dụng cấu hình mặc định của nhân là 64bit. nếu các bạn chạy 32bit thì ở bước thì chạy thêm câu lệnh.</p>



<pre class="wp-block-code"><code>make menuconfig</code></pre>



<p>và chỉnh sử trong đó. Hoặc có thể dùng luôn cấu hình của bản phân phối linux bạn đang dùng, bằng cách  sao chép một trong&nbsp;<code>/boot/config-xxx</code> vào trong thư mục gốc nguồn nhân Linux và đổi tên nó thành&nbsp;<code>.config</code>.</p>



<h3 class="wp-block-heading" id="aioseo-cu-hinh-va-bien-dch-nhan-linux">Cấu hình và biên dịch nhân linux</h3>



<pre class="wp-block-code"><code>make defconfig
make menuconfig (nếu cần cấu hình thêm)
make -j $(nproc)</code></pre>



<p>Sau câu lệnh này máy tính sẽ bắt đầu biên dịch nhân. Tùy vào cấu hình máy thì thời gian biên dịch sẽ khác nhau (tầm khoảng 30 phút đến 1 tiếng).</p>



<p>Lưu ý, nếu bạn gặp lỗi này thì bạn truy cập <a href="https://askubuntu-com.translate.goog/questions/1329538/compiling-kernel-5-11-11-and-later/1329625?_x_tr_sl=en&amp;_x_tr_tl=vi&amp;_x_tr_hl=vi&amp;_x_tr_pto=sc#1329625" title="">vào đây</a> để sửa lỗi:</p>



<pre class="wp-block-code"><code><span style="color: rgb(36, 36, 36); font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; font-size: 16px; letter-spacing: -0.352px; background-color: rgb(242, 242, 242);">make&#91;1]: *** No rule to make target 'debian/canonical-certs.pem', needed by 'certs/x509_certificate_list'.  Stop.</span></code></pre>



<p>Ok nếu nó ra được như vầy là ok ùi đó: </p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1098" height="629" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/Screenshot-from-2024-05-16-19-11-16.png" alt="" class="wp-image-44"/></figure>



<p>Bây giờ đường dẫn tới kernel mới tạo (tính từ thư mục của kernel): /arch/x86/boot/bzImage hoặc /arch/x86_64/boot/bzImage</p>



<h2 class="wp-block-heading" id="aioseo-busybox">BusyBox:</h2>



<h3 class="wp-block-heading" id="aioseo-ti-va-bien-dch-busybox">Tải và biên dịch BusyBox</h3>



<p>Ok bây giờ tỡi phần xương cho linux. Ở đây chúng ta sử dụng BusyBox để tạo một hệ thống tập tin đơn giản cho linux. Các bước tải về cũng tương tự nhân linux.</p>



<pre class="wp-block-code"><code>wget https://busybox.net/downloads/busybox-1.36.1.tar.bz2
tar xf busybox-1.36.1.tar.bz2
cd busybox-1.36.1/
</code></pre>



<p>Cái này làm tương tự nhân linux.</p>



<pre class="wp-block-code"><code>make defconfig
make menuconfig</code></pre>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1913" height="1026" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/Screenshot-from-2024-05-16-19-18-23.png" alt="" class="wp-image-45"/></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1913" height="1026" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/Screenshot-from-2024-05-16-19-20-44.png" alt="" class="wp-image-46"/></figure>



<p>Chọn Setting -&gt; Build static binary(no shared libs). Ở đây mình chọn config như vầy để bài viết này đơn giản hơn, đỡ tốn công build thêm thư viện Glibc. Đương nhiên đây chỉ là build thử nghiệm nếu muốn tạo một bản phân phối hoàn chỉnh thì cần phải build thêm nữa. Nhưng mà những thứ đó mình sẽ để nó ở bài viết sau nhé!</p>



<p>Cuối cùng chạy lệnh để build busybox: </p>



<pre class="wp-block-code"><code>make -j $(nproc)</code></pre>



<p>Sau khi build xong thi chúng ta sẽ kiểm tra lại bằng lệnh: </p>



<pre class="wp-block-code"><code>file busybox
</code></pre>



<p>Nếu nó giống chỗ khoanh đỏ như vầy là được.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1918" height="151" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/Screenshot-from-2024-05-16-19-23-15.png" alt="" class="wp-image-47"/></figure>



<h3 class="wp-block-heading" id="aioseo-to-h-thng-tp">Tạo hệ thống tệp</h3>



<p>Bây giờ chúng ta sẽ tạo hệ thống tệp chứa BusyBox, chạy lệnh: </p>



<pre class="wp-block-code"><code>make install</code></pre>



<p>Thao tác này sẽ tạo ra một thư mục tên _install, và khi bạn mở nó, bạn sẽ thấy một hệ thống phân cấp giống như tệp Linux trong đó</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1918" height="346" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/Screenshot-from-2024-05-16-19-26-30.png" alt="" class="wp-image-50"/></figure>



<p>Trong thư mục này, hãy chạy lệnh sau để tạo các thư mục cần thiết cho kernel.</p>



<pre class="wp-block-code"><code>mkdir dev proc sys
</code></pre>



<p>Bây giờ hãy tạo một tệp có tên init và mở nó bằng trình soạn thảo văn bản. Sao chép và dán dữ liệu vào đó:</p>



<pre class="wp-block-code"><code>#!/bin/sh
mount -t devtmpfs none /dev
mount -t proc none /proc
mount -t sysfs none /sys
echo "Welcome to my Linux!"
exec /bin/sh</code></pre>



<p>Sau đó chúng ta chạy lênh chmod +x init để hoàn tất.</p>



<p id="4fbc">Hãy tóm tắt lại những gì chúng ta vừa làm; BusyBox đã tạo cho chúng tôi một tệp thực thi có khả năng cung cấp cho chúng tôi rất nhiều tiện ích Linux như&nbsp;<code>sh</code>,&nbsp;<code>echo</code>,&nbsp;<code>vi</code>v.v. Với việc&nbsp; <code>make install</code> chúng tôi tạo ra một hệ thống phân cấp hệ thống tệp chứa các chương trình này dưới dạng liên kết đến tệp thực thi BusyBox. Tiếp theo, chúng tôi tạo một tập lệnh shell có tên&nbsp;<code>init</code>. Tập lệnh này sẽ được chạy sau khi tải kernel. Lúc đầu, nó gắn kết&nbsp;<code>dev</code> và&nbsp;<code>proc&nbsp;</code>các&nbsp;<code>sys&nbsp;</code>thư mục đặc biệt. Bạn có thể đọc về họ từ <a href="https://askubuntu.com/questions/720471/whats-the-sys-directory-for?_x_tr_sl=en&amp;_x_tr_tl=vi&amp;_x_tr_hl=vi&amp;_x_tr_pto=sc" target="_blank" rel="noopener" title="">đây&nbsp;</a>và&nbsp;<a href="https://tldp.org/LDP/Linux-Filesystem-Hierarchy/html/proc.html?_x_tr_sl=en&amp;_x_tr_tl=vi&amp;_x_tr_hl=vi&amp;_x_tr_pto=sc" target="_blank" rel="noopener" title="">đây</a>&nbsp;. Đó là lý do tại sao chúng tôi phải tạo những thư mục đó! Cuối cùng, nó in một thông báo chào mừng và chạy&nbsp;<code>sh</code>để mở shell.</p>



<p id="0c83">Là một lưu ý phụ, bạn có thể đặt BẤT KỲ tệp thực thi nào dưới dạng&nbsp;<code>init&nbsp;</code>tệp miễn là nó được liên kết tĩnh. Bạn cũng có thể muốn mount&nbsp;<code>dev</code>và&nbsp;<code>sys</code>các&nbsp;<code>proc</code>thư mục khi chương trình bắt đầu sử dụng tiêu đề&nbsp;<a href="https://man7.org/linux/man-pages/man2/mount.2.html?_x_tr_sl=en&amp;_x_tr_tl=vi&amp;_x_tr_hl=vi&amp;_x_tr_pto=sc" target="_blank" rel="noopener" title="">mount.h</a>&nbsp;. Tìm hiểu thêm về vấn đề này&nbsp;<a href="https://superuser.com/questions/320529/how-to-create-a-linux-system-that-runs-a-single-application/991733?_x_tr_sl=en&amp;_x_tr_tl=vi&amp;_x_tr_hl=vi&amp;_x_tr_pto=sc#991733" target="_blank" rel="noopener" title="">ở đây</a>&nbsp;.</p>



<p>Ok bây giờ mọi thứ đã xong. Chúng ta chạy câu lệnh này để đóng gói hệ thống tệp này lại.</p>



<pre class="wp-block-code"><code>find . -print0 | cpio --null -ov --format=newc | gzip -9 &gt; ../initramfs.cpio.gz</code></pre>



<h2 class="wp-block-heading" id="aioseo-kim-tra-ht-nhan-da-bien-dch-vi-qemu">Kiểm tra hạt nhân đã biên dịch với QEMU:</h2>



<p>Trước khi tạo file ISO chúng ta hãy kiểm tra xem bản thân kernel có ổn hay không. Ở đây mính sửa dung qemu, vì nó nhẹ và có thể chạy chỉ với một câu lệnh mà không cần phải cài đặt Ram hay bộ nhớ. Bây giờ hãy thoát ra thư mục chứa kernel và busybox và chạy lệnh.</p>



<pre class="wp-block-code"><code>qemu-system-x86_64 -kernel ./linux-6.9/arch/x86_64/boot/bzImage -initrd ./busybox-1.36.1/initramfs.cpio.gz 
</code></pre>



<p>Ok nếu mọi thứ đã ổn và giống như vầy thì bạn đã thành công:</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="740" height="471" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/Screenshot-from-2024-05-16-19-43-08.png" alt="" class="wp-image-54"/></figure>



<h2 class="wp-block-heading" id="aioseo-to-iso-co-kh-nang-khi-dng">Tạo ISO có khả năng khởi động:</h2>



<h3 class="wp-block-heading" id="aioseo-chun-b-tp-tin">Chuẩn bị tập tin</h3>



<p><strong>Tạo một thư mục ở đâu đó với bất kỳ tên nào bạn muốn. Tôi đặt tên cho nó&nbsp;<code>iso</code>. Sau đó tạo một thư mục có tên&nbsp;<code>boot</code>&nbsp;trong đó và bên trong&nbsp;<code>boot</code>&nbsp;Tạo thư mục có tên&nbsp;<code>grub</code>. Sau đó sao chép&nbsp;<code>bzImage&nbsp;</code>và&nbsp;<code>initramfs.cpio.gz</code>&nbsp;vào thư mục khởi động.</strong></p>



<h3 class="wp-block-heading" id="aioseo-to-tp-cu-hinh-grub">Tạo tệp cấu hình Grub</h3>



<p>Chúng tôi sẽ sử dụng grub-mkrescue để tạo ISO có thể khởi động của chúng tôi. Nhưng trước khi làm như vậy, chúng ta phải biết liệu máy chủ hiện tại của chúng ta có được khởi động bằng UEFI hay BIOS hay không. Để làm như vậy, hãy kiểm tra xem thư mục /sys/firmware/efi có tồn tại trên hệ thống của bạn hay không. Nếu có, máy tính của bạn sử dụng UEFI nếu không thì đó là BIOS.</p>



<p>Vậy tại sao biết điều này lại quan trọng? Các grub-mkrescue sử dụng nội dung grub hiện được cài đặt để tạo hình ảnh ISO. Điều này có nghĩa là nếu hệ điều hành của bạn được khởi động trong BIOS, rất có thể ISO được tạo từ grub-mkrescue hoàn toàn không hỗ trợ UEFI. Trong một số trường hợp, bo mạch chủ UEFI hỗ trợ khởi động hình ảnh BIOS bằng CMS. Nhưng điều đó không phải lúc nào cũng đúng. Nếu bạn muốn tạo hình ảnh cho BIOS từ máy chủ UEFI hoặc ngược lại, tôi khuyên bạn nên tạo một máy ảo Debian trong VirtualBox. VirtualBox hỗ trợ cả BIOS và UEFI trong cài đặt bo mạch chủ của nó. Sau khi chọn cái thích hợp, hãy cài đặt Debian (cài đặt mạng là đủ) và di chuyển thư mục chứa các thư mục khởi động và grub sang máy ảo. Sau đó tiếp tục đọc hướng dẫn để cấu hình grub và tạo tệp tin ISO.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="719" height="563" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/image.png" alt="" class="wp-image-59"/></figure>



<p>Bây giờ chúng ta phải cấu hình chính grub. Tạo tệp có tên&nbsp;<code>grub.cfg</code>&nbsp;trong&nbsp;<code>grub</code>&nbsp;thư mục của&nbsp;<code>boot</code>&nbsp;thư mục. Nếu máy chủ của bạn được khởi động bằng BIOS (và do đó ISO đầu ra cũng là BIOS), hãy đặt các dòng này vào tệp cấu hình:</p>



<pre class="wp-block-code"><code>set default=0
set timeout=10
menuentry 'myos' --class os {
    insmod gzio
    insmod part_msdos
    linux /boot/bzImage
    initrd /boot/initramfs.cpio.gz
}</code></pre>



<p id="7627">Nếu bạn đang sử dụng UEFI, hãy đặt những dòng này vào đó:</p>



<pre class="wp-block-code"><code>set default=0
set timeout=10
# Load EFI video drivers. This device is EFI so keep the
# video mode while booting the linux kernel.
insmod efi_gop
insmod font
if loadfont /boot/grub/fonts/unicode.pf2
then
        insmod gfxterm
        set gfxmode=auto
        set gfxpayload=keep
        terminal_output gfxterm
fi
menuentry 'myos' --class os {
    insmod gzio
    insmod part_msdos
    linux /boot/bzImage
    initrd /boot/initramfs.cpio.gz
}</code></pre>



<p>Cuối cùng, chạy lệnh này để tạo tệp ISO. Thay thế đối số cuối cùng bằng tên thư mục mà bạn đã tạo ở bước đầu tiên.</p>



<pre class="wp-block-code"><code>grub-mkrescue -o myos.iso iso/ 
</code></pre>



<p>Nếu bạn nhận được&nbsp;<em>grub-mkrescue: lỗi: xorriso không tìm thấy&nbsp;</em>, chỉ cần cài đặt&nbsp;<code>xorriso&nbsp;</code>từ trình quản lý gói của bạn.</p>



<h2 class="wp-block-heading" id="aioseo-chung-toi-s-s-dng-grub-mkrescue-d-to-iso-co-th-khi-dng-ca-chung-toi-nhng-trc-khi-lam-nh-vy-chung-ta-phi-bit-liu-may-ch-hin-ti-ca-chung-ta-co-dc-khi-dng-bng-uefi-hay-bios-hay-khong-d-lam-nh-vy-hay-kim-tra-xem-th-mc-sys-firmware-efi-co-tn-ti-tren-h-thng-ca-bn-hay-khong-nu-co-may-tinh-ca-bn-s-dng-uefi-nu-khong-thi-do-la-bios-vy-ti-sao-bit-diu-nay-li-quan-trng-cac-grub-mkrescue-s-dng-ni-dung-grub-hin-dc-cai-dt-d-to-hinh-nh-iso-diu-nay-co-nghia-la-nu-h-diu-hanh-ca-bn-dc-khi-dng-trong-bios-rt-co-th-iso-dc-to-t-grub-mkrescue-hoan-toan-khong-h-tr-uefi-trong-mt-s-trng-hp-bo-mch-ch-uefi-h-tr-khi-dng-hinh-nh-bios-bng-cms-nhng-diu-do-khong-phi-luc-nao-cung-dung-nu-bn-mun-to-hinh-nh-cho-bios-t-may-ch-uefi-hoc-ngc-li-toi-khuyen-bn-nen-to-mt-may-o-debian-trong-virtualbox-virtualbox-h-tr-c-bios-va-uefi-trong-cai-dt-bo-mch-ch-ca-no-sau-khi-chn-cai-thich-hp-hay-cai-dt-debian-cai-dt-mng-la-d-va-di-chuyn-th-mc-cha-cac-th-mc-khi-dng-va-grub-sang-may-o-sau-do-tip-tc-dc-hng-dn-d-cu-hinh-grub-va-to-tp-tin-iso"><p id="237e" class="pw-post-body-paragraph ml mm gt mn b mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne nf ng nh ni gm bj" style="box-sizing: inherit; margin: 2.14em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px; white-space-collapse: collapse; background-color: rgb(255, 255, 255);" data-selectable-paragraph=""></p></h2>



<h3 class="wp-block-heading" id="aioseo-chung-toi-s-s-dng-grub-mkrescue-d-to-iso-co-th-khi-dng-ca-chung-toi-nhng-trc-khi-lam-nh-vy-chung-ta-phi-bit-liu-may-ch-hin-ti-ca-chung-ta-co-dc-khi-dng-bng-uefi-hay-bios-hay-khong-d-lam-nh-vy-hay-kim-tra-xem-th-mc-sys-firmware-efi-co-tn-ti-tren-h-thng-ca-bn-hay-khong-nu-co-may-tinh-ca-bn-s-dng-uefi-nu-khong-thi-do-la-bios-vy-ti-sao-bit-diu-nay-li-quan-trng-cac-grub-mkrescue-s-dng-ni-dung-grub-hin-dc-cai-dt-d-to-hinh-nh-iso-diu-nay-co-nghia-la-nu-h-diu-hanh-ca-bn-dc-khi-dng-trong-bios-rt-co-th-iso-dc-to-t-grub-mkrescue-hoan-toan-khong-h-tr-uefi-trong-mt-s-trng-hp-bo-mch-ch-uefi-h-tr-khi-dng-hinh-nh-bios-bng-cms-nhng-diu-do-khong-phi-luc-nao-cung-dung-nu-bn-mun-to-hinh-nh-cho-bios-t-may-ch-uefi-hoc-ngc-li-toi-khuyen-bn-nen-to-mt-may-o-debian-trong-virtualbox-virtualbox-h-tr-c-bios-va-uefi-trong-cai-dt-bo-mch-ch-ca-no-sau-khi-chn-cai-thich-hp-hay-cai-dt-debian-cai-dt-mng-la-d-va-di-chuyn-th-mc-cha-cac-th-mc-khi-dng-va-grub-sang-may-o-sau-do-tip-tc-dc-hng-dn-d-cu-hinh-grub-va-to-tp-tin-iso"><p id="237e" class="pw-post-body-paragraph ml mm gt mn b mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne nf ng nh ni gm bj" style="box-sizing: inherit; margin: 2.14em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px; white-space-collapse: collapse; background-color: rgb(255, 255, 255);" data-selectable-paragraph=""><span style="font-size: revert; font-weight: revert; white-space-collapse: preserve; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;">Kiểm tra ISO với VirtualBox</span></p></h3>



<p>Trước khi kiểm tra ISO trên máy tính thực, chúng ta hãy thử khởi động từ nó trong VirtualBox. Để làm như vậy, hãy tạo một máy ảo mới và chọn ISO bạn vừa tạo làm nội dung của đĩa quang. Khởi động hệ điều hành. Bạn phải thấy menu grub và sau đó hệ điều hành phải khởi động. Đừng quên chọn EFI trong cài đặt bo mạch chủ nếu cần.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="720" height="475" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/image-1.png" alt="" class="wp-image-61"/></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="718" height="473" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/image-2.png" alt="" class="wp-image-62"/></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1022" height="839" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/image-3.png" alt="" class="wp-image-63"/></figure>



<h3 class="wp-block-heading" id="3d8e">Khắc phục &#8220;lỗi: hạt nhân không hỗ trợ CPU 64 bit&#8221;</h3>



<p id="c35b">Nếu bạn đã biên dịch một hạt nhân 32bit và cố gắng sử dụng Ubuntu để tạo EFI ISO cho nó, có thể bạn sẽ gặp thông báo lỗi này trong grub. Tôi không chắc đây là một tính năng hay một lỗi (xem&nbsp;<a href="https://bugs.launchpad.net/ubuntu/+source/grub2/+bug/1876737" target="_blank" rel="noreferrer noopener">ở đây&nbsp;</a>) nhưng bạn có thể chỉ cần sử dụng một máy ảo Debian để tạo tệp ISO để bỏ qua vấn đề này.</p>



<h3 class="wp-block-heading" id="8a22">Khắc phục màn hình đen sau khi grub khi khởi động trong UEFI</h3>



<p id="97b5">Khi khởi động trong UEFI, sau khi chọn hệ điều hành của bạn trong grub, màn hình của bạn có thể trống và trống. Điều này có thể chỉ ra sự cố trong cấu hình kernel của bạn. Tôi khuyên bạn nên kiểm tra các tùy chọn bộ đệm khung EFI và bật chúng.</p>



<h3 class="wp-block-heading" id="aioseo-kim-tra-phn-cng-thc">Kiểm tra phần cứng thực</h3>



<p>Cuối cùng, chúng ta sẽ thử hệ điều hành của mình trên phần cứng thực. Để làm như vậy, cá nhân tôi sử dụng&nbsp;Rufus&nbsp;để tạo ổ đĩa flash có thể khởi động. Trong hộp thoại mà nó hỏi bạn muốn viết ở chế độ DD hay ISO, hãy chọn chế độ DD.Cắm đèn flash của bạn vào máy tính xách tay / PC của bạn, thay đổi thứ tự khởi động và vô hiệu hóa khởi động an toàn. Hệ điều hành của bạn sẽ khởi động sau đó!</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1278" height="791" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/image-4.png" alt="" class="wp-image-64"/></figure>



<h2 class="wp-block-heading" id="aioseo-ngun">Nguồn:</h2>



<ul>
<li><a href="https://translate.google.com/website?sl=en&amp;tl=vi&amp;hl=vi&amp;prev=search&amp;u=https://gist.github.com/chrisdone/02e165a0004be33734ac2334f215380e" target="_blank" rel="noreferrer noopener">https://Gist.github.com/chrisdone/02e165a0004be33734ac2334f215380e</a></li>



<li><a href="https://translate.google.com/website?sl=en&amp;tl=vi&amp;hl=vi&amp;prev=search&amp;u=https://subscription.packtpub.com/book/hardware-and-creative/9781783289851/1/ch01lvl1sec09/compiling-busybox-simple" target="_blank" rel="noreferrer noopener">https://subscription.packtpub.com/book/hardware-and-creative/9781783289851/1/ch01lvl1sec09/compiling-busybox-simple</a></li>



<li><a href="https://translate.google.com/website?sl=en&amp;tl=vi&amp;hl=vi&amp;prev=search&amp;u=https://unix.stackexchange.com/a/238585/331589" target="_blank" rel="noreferrer noopener">https://unix.stackexchange.com/a/238585/331589</a></li>



<li><a href="https://translate.google.com/website?sl=en&amp;tl=vi&amp;hl=vi&amp;prev=search&amp;u=https://superuser.com/a/1509114/940438" target="_blank" rel="noreferrer noopener">https://superuser.com/a/1509114/940438</a></li>



<li><a href="https://translate.google.com/website?sl=en&amp;tl=vi&amp;hl=vi&amp;prev=search&amp;u=https://itsfoss.com/check-uefi-or-bios/" target="_blank" rel="noreferrer noopener">https://itsfoss.com/check-uefi-or-bios/</a></li>



<li><a href="https://translate.google.com/website?sl=en&amp;tl=vi&amp;hl=vi&amp;prev=search&amp;u=https://askubuntu.com/a/1329625/746382" target="_blank" rel="noreferrer noopener">https://askubfox.com/a/1329625/746382</a></li>



<li><a href="https://translate.google.com/website?sl=en&amp;tl=vi&amp;hl=vi&amp;prev=search&amp;u=https://www.reddit.com/r/Gentoo/comments/v1d36n/black_screen_after_grub_but_only_with_kernel/" target="_blank" rel="noreferrer noopener">https://www.reddit.com/r/Gentoo/comments/v1d36n/black_screen_after_grub_but_only_with_kernel/</a></li>
</ul>
]]></content:encoded>
					
					<wfw:commentRss>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/17/bien-dich-nhan-linux-va-tao-iso-co-the-khoi-dong/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Giới thiệu về bản thân</title>
		<link>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/15/hello-world/</link>
					<comments>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/15/hello-world/#respond</comments>
		
		<dc:creator><![CDATA[tuankhanh]]></dc:creator>
		<pubDate>Wed, 15 May 2024 03:57:05 +0000</pubDate>
				<category><![CDATA[giới thiệu]]></category>
		<guid isPermaLink="false">https://itblog.id.vn/?p=1</guid>

					<description><![CDATA[Chào mừng bạn đến với blog của tôi! Tôi tên là Tuấn Khanh, với đam mê về Công Nghệ Thông Tin và muốn chia sẻ kiến thức và trải nghiệm của mình trong lĩnh vực này. Tôi là một người đam mê công nghệ từ thuở nhỏ, và tôi luôn tò mò về cách mà [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>Chào mừng bạn đến với blog của tôi! Tôi tên là Tuấn Khanh, với đam mê về Công Nghệ Thông Tin và muốn chia sẻ kiến thức và trải nghiệm của mình trong lĩnh vực này.</p>



<p>Tôi là một người đam mê công nghệ từ thuở nhỏ, và tôi luôn tò mò về cách mà công nghệ thay đổi cuộc sống của chúng ta. Tôi tin rằng thông qua việc tìm hiểu và chia sẻ, chúng ta có thể hiểu rõ hơn về cách mà công nghệ có thể mang lại lợi ích và thay đổi tích cực cho xã hội.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1832" height="1374" src="https://nttkdeveloper.github.io/tuankhanhblog/wp-content/uploads/2024/05/20240526_105822.jpg" alt="" class="wp-image-141"/></figure>



<p>Trên blog này, bạn sẽ tìm thấy các bài viết, kinh nghiệm bản thân và đánh giá về những kiến thức, kinh nghiệm và trải nghiệm của mình trong lĩnh vực Công nghê thông tin, từ trí tuệ nhân tạo đến lập trình web, từ Internet of Things đến công nghệ cloud và nhiều hơn nữa. Tôi hy vọng rằng những thông tin và ý kiến mà tôi chia sẻ sẽ giúp bạn hiểu rõ hơn về thế giới số đang phát triển xung quanh chúng ta.</p>



<p>Ngoài ra, tôi cũng rất mong được kết nối và trao đổi ý kiến với cộng đồng. Hãy để lại bình luận, góp ý hoặc câu hỏi của bạn dưới mỗi bài viết, và chúng ta có thể cùng nhau khám phá và học hỏi về thế giới công nghệ ngày càng mở rộng này.</p>



<p>Hãy cùng nhau trải nghiệm cuộc hành trình này, đắm mình trong biển thông tin vô tận của Công Nghệ Thông Tin, và cùng nhau khám phá những tiềm năng không ngừng của thế giới số!</p>



<p>Cảm ơn tất cả mọi người ghé thăm blog của tôi!</p>
]]></content:encoded>
					
					<wfw:commentRss>https://nttkdeveloper.github.io/tuankhanhblog/2024/05/15/hello-world/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
